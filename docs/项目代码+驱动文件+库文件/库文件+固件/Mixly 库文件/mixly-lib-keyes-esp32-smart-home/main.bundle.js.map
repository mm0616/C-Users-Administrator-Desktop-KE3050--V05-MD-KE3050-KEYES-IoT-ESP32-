{"version":3,"file":"main.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAwC;AACV;AAC9B;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA,wBAAwB,6CAAW;AACnC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,iEAA4B;AACpF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,6BAA6B,uDAAqB;AAClD;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,6DAA0B;AAClF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB;AAClD;AACA;AACA;AACA;AACA,wBAAwB,6CAAW;AACnC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,6DAA0B;AAClF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,6BAA6B,uDAAqB;AAClD,+CAA+C;AAC/C,2CAA2C;AAC3C,mDAAmD;AACnD,iDAAiD;AACjD,qDAAqD;AACrD,yDAAyD;AACzD;AACA;AACA;AACA;AACA,wBAAwB,6CAAW;AACnC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,6DAA0B;AAClF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,iDAAoB;AAC5E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW,qBAAqB,6CAAW;AACpE;AACA;AACA,wBAAwB,6CAAW;AACnC;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,wBAAwB,6CAAW;AACnC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qEAA8B;AACtF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,yDAAwB;AAChF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,mDAAqB;AAC7E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,mDAAqB;AAC7E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,6CAAW,uCAAuC,6CAAW;AAC1E;AACO;AACP;AACA;AACA;AACA,6BAA6B,uDAAqB;AAClD,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,CAAC,2DAAe;AAClE,6BAA6B,uDAAqB;AAClD;AACA;AACA;AACA;AACA;AACA,+BAA+B,6CAAW;AAC1C,4BAA4B,6CAAW;AACvC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,6BAA6B,qDAAmB;AAChD;AACA;AACA,wBAAwB,gEAA8B;AACtD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW,aAAa,6CAAW;AAC5D,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,CAAC,2DAAe;AAClE,sBAAsB,qDAAmB;AACzC;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB;AAClD;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,CAAC,2DAAe;AAClE,sBAAsB,qDAAmB;AACzC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,CAAC,2DAAe;AAClE,sBAAsB,qDAAmB;AACzC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,CAAC,2DAAe;AAClE,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,6CAAW;AAChB,KAAK,6CAAW;AAChB;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,CAAC,2DAAe;AAClE,sBAAsB,qDAAmB;AACzC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,CAAC,2DAAe;AAClE,sBAAsB,qDAAmB;AACzC;AACA,6BAA6B,uDAAqB;AAClD;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,CAAC,2DAAe;AAClE,sBAAsB,qDAAmB;AACzC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,+CAAa;AACtC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,+CAAa;AACtC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,+CAAa;AACtC;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB;AAClD,6BAA6B,wDAAsB;AACnD,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6CAAW;AACnC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC,6BAA6B,wDAAsB;AACnD,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,wBAAwB,6CAAW;AACnC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,wDAAsB;AACnD,6BAA6B,uDAAqB,GAAG,6CAAW,wBAAwB,6CAAW,2BAA2B,6CAAW,oCAAoC,6CAAW,wCAAwC,6CAAW,kCAAkC,6CAAW,sCAAsC,6CAAW,kCAAkC,6CAAW,yCAAyC,6CAAW;AAC1a;AACA;AACA;AACA,wBAAwB,6CAAW;AACnC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,yDAAwB;AAChF;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,yDAAwB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,6BAA6B,wDAAsB;AACnD,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,+DAA2B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,YAAY,+CAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,CAAC,2DAAe;AAClE,6BAA6B,uDAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACluBgC;AAChC;AACA;AACA;AACO;AACP;AACA;AACA;AACA,iEAAiE;AACjE,2EAA2E;AAC3E;AACA,wBAAwB,GAAG,IAAI,UAAU,EAAE;AAC3C;AACA;AACA;AACO;AACP;AACA;AACA,+FAA+F;AAC/F,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,gCAAgC,IAAI,mCAAmC;AACvE,+DAA+D;AAC/D;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,oCAAoC,IAAI,+BAA+B;AACvE;AACA,gCAAgC,IAAI,mCAAmC;AACvE;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,gCAAgC,IAAI,mCAAmC;AACvE;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,0BAA0B,mCAAmC;AACjI;AACA,0DAA0D,6BAA6B;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F;AAC3F,gHAAgH;AAChH;AACA,uEAAuE,iCAAiC;AACxG;AACA;AACA;AACO;AACP;AACA;AACA;AACA,2FAA2F;AAC3F,gHAAgH;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,6FAA6F;AAC7F;AACA;AACA;AACA;AACA;AACO;AACP;AACO;AACP;AACA;AACO;AACP;AACA,6FAA6F;AAC7F;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,uIAAuI;AACvI,sFAAsF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,+NAA+N;AAC/N,mHAAmH;AACnH;AACA;AACA;AACO;AACP;AACA;AACA;AACA,mHAAmH;AACnH,sFAAsF;AACtF;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,wGAAwG;AACxG;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,2KAA2K;AAC3K;AACA;AACA;AACO;AACP;AACA,2DAA2D;AAC3D;AACA;AACA;AACO;AACP;AACA;AACA,mHAAmH;AACnH;AACA,+CAA+C;AAC/C,+BAA+B;AAC/B,qGAAqG;AACrG,cAAc;AACd,qCAAqC;AACrC,8BAA8B;AAC9B,qGAAqG;AACrG,cAAc;AACd,kBAAkB;AAClB,+BAA+B;AAC/B,qGAAqG;AACrG,cAAc;AACd,YAAY;AACZ;AACA;AACA,4CAA4C;AAC5C,2BAA2B;AAC3B,sBAAsB,OAAO,KAAK;AAClC,wBAAwB,mDAAmD,KAAK;AAChF,0FAA0F;AAC1F,gBAAgB;AAChB,0DAA0D;AAC1D,2BAA2B;AAC3B,cAAc;AACd,YAAY;AACZ;AACA,2CAA2C;AAC3C;AACA;AACA;AACO;AACP;AACA;AACA;AACA,+CAA+C;AAC/C,+BAA+B;AAC/B,qGAAqG;AACrG,cAAc;AACd,qCAAqC;AACrC,8BAA8B;AAC9B,qGAAqG;AACrG,cAAc;AACd,kBAAkB;AAClB,+BAA+B;AAC/B,qGAAqG;AACrG,cAAc;AACd,YAAY;AACZ;AACA;AACA,4CAA4C;AAC5C,2BAA2B;AAC3B,sBAAsB,OAAO,KAAK;AAClC,wBAAwB,mDAAmD,KAAK;AAChF,0FAA0F;AAC1F,gBAAgB;AAChB,0DAA0D;AAC1D,2BAA2B;AAC3B,cAAc;AACd,YAAY;AACZ;AACA;AACA,iDAAiD;AACjD,2BAA2B;AAC3B,sBAAsB,SAAS,KAAK;AACpC,wBAAwB,oDAAoD,KAAK;AACjF,sJAAsJ;AACtJ,gBAAgB;AAChB,0DAA0D;AAC1D,2BAA2B;AAC3B,cAAc;AACd,YAAY;AACZ;AACA,gDAAgD;AAChD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,+BAA+B;AAC/B,qGAAqG;AACrG,cAAc;AACd,qCAAqC;AACrC,8BAA8B;AAC9B,qGAAqG;AACrG,cAAc;AACd,kBAAkB;AAClB,+BAA+B,sFAAsF;AACrH,cAAc;AACd,YAAY;AACZ;AACA;AACA;AACA,4CAA4C,iEAAiE,iBAAiB;AAC9H,sHAAsH;AACtH,gBAAgB;AAChB,0DAA0D;AAC1D;AACA,4CAA4C,iEAAiE,iBAAiB;AAC9H,kMAAkM;AAClM,gBAAgB;AAChB,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,qBAAqB,0CAAO;AAC5B;AACA;AACA;AACA;AACA,6IAA6I;AAC7I;AACA;AACA;AACA;AACA;AACA,iLAAiL;AACjL;AACA;AACA;AACA;AACA,iJAAiJ;AACjJ,mFAAmF;AACnF;AACA;AACA,wEAAwE;AACxE,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,4CAA4C;AAC5C,wCAAwC;AACxC,4CAA4C;AAC5C,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,4HAA4H,uBAAuB;AACnJ;AACA,UAAU;AACV,wFAAwF;AACxF,uBAAuB;AACvB,wBAAwB;AACxB,YAAY;AACZ,yBAAyB;AACzB,4BAA4B,sBAAsB,MAAM;AACxD,sEAAsE;AACtE,YAAY;AACZ,2BAA2B;AAC3B,UAAU;AACV;AACA,0DAA0D,qBAAqB;AAC/E;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gHAAgH;AAChH,uDAAuD;AACvD;AACA,4DAA4D;AAC5D;AACA,4CAA4C,gCAAgC;AAC5E;AACA,cAAc;AACd;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,4EAA4E,wCAAwC,wBAAwB;AAC5I,4DAA4D,gCAAgC,4CAA4C,gBAAgB,uBAAuB,OAAO,yBAAyB,oCAAoC,2BAA2B,mCAAmC,qCAAqC,qBAAqB,2CAA2C,yCAAyC;AAC/b;AACA,mDAAmD,oBAAoB,iBAAiB,OAAO,uDAAuD,mBAAmB,OAAO,iDAAiD,wCAAwC,sDAAsD,+CAA+C,4CAA4C,8BAA8B,iBAAiB,OAAO,gDAAgD;AAChgB;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,kCAAkC,KAAK,GAAG;AAC1C;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,4BAA4B,EAAE;AAC/D;AACA;;;;;;;;;;;;;;;ACjeyCAAyC;AACzC,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,6CAA6C;AAC7C,6CAA6C;AAC7C,wCAAwC;AACxC,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;;;;;;;;;;;;;;AChTA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,sCAAsC;AACtC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;;;;;;;;;;;;;;AChqCAAqC;AACrC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,sCAAsC;AACtC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnSP;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNwC;AACwB;AACA;AACb;AACE;AACZ;AACzC;AACA;AACA,cAAc,8CAAY,SAAS,wDAAS;AAC5C,cAAc,8CAAY,SAAS,wDAAS;AAC5C,cAAc,8CAAY,KAAK,+CAAK;AACpC,cAAc,8CAAY,aAAa,8DAAe;AACtD,cAAc,8CAAY,aAAa,8DAAe;AACtD,cAAc,8CAAY,SAAS,qDAAW;AAC9C;AACA;AACA,cAAc,gDAAc,EAAE,0CAAM;AACpC;AACA;AACA,cAAc,iDAAe,WAAW,kDAAU,E","sources":["webpack://mixly-lib-keyes-esp32-smart-home/./src/blocks/block.js","webpack://mixly-lib-keyes-esp32-smart-home/./src/generators/generator.js","webpack://mixly-lib-keyes-esp32-smart-home/./src/language/en.js","webpack://mixly-lib-keyes-esp32-smart-home/./src/language/zh-hans.js","webpack://mixly-lib-keyes-esp32-smart-home/./src/language/zh-hant.js","webpack://mixly-lib-keyes-esp32-smart-home/external var \"Blockly\"","webpack://mixly-lib-keyes-esp32-smart-home/external var \"Mixly\"","webpack://mixly-lib-keyes-esp32-smart-home/external var \"profile\"","webpack://mixly-lib-keyes-esp32-smart-home/webpack/bootstrap","webpack://mixly-lib-keyes-esp32-smart-home/webpack/runtime/compat get default export","webpack://mixly-lib-keyes-esp32-smart-home/webpack/runtime/define property getters","webpack://mixly-lib-keyes-esp32-smart-home/webpack/runtime/hasOwnProperty shorthand","webpack://mixly-lib-keyes-esp32-smart-home/webpack/runtime/make namespace object","webpack://mixly-lib-keyes-esp32-smart-home/./src/index.js"],"sourcesContent":["import * as Blockly from 'blockly/core';\r\nimport profile from 'profile';\r\n\r\nconst SMART_HOME_HUE = 80;\r\n\r\n/////////////////模拟输出//////////////////////\r\n\r\nexport const ke_a_Write = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_ANALOGWRITE_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_CHANNEL)\r\n            .appendField(new Blockly.FieldDropdown([\r\n                ['CH0 (LT0)', '0'],\r\n                ['CH1 (LT0)', '1'],\r\n                ['CH2 (LT1)', '2'],\r\n                ['CH3 (LT1)', '3'],\r\n                ['CH4 (LT2)', '4'],\r\n                ['CH5 (LT2)', '5'],\r\n                ['CH6 (LT3)', '6'],\r\n                ['CH7 (LT3)', '7'],\r\n                ['CH8 (HT0)', '8'],\r\n                ['CH9 (HT0)', '9'],\r\n                ['CH10 (HT1)', '10'],\r\n                ['CH11 (HT1)', '11'],\r\n                ['CH12 (HT2)', '12'],\r\n                ['CH13 (HT2)', '13'],\r\n                ['CH14 (HT3)', '14'],\r\n                ['CH15 (HT3)', '15']]), \"channel\");\r\n        this.appendValueInput(\"NUM\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_VALUE2)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip(Blockly.Msg.MIXLY_TOOLTIP_INOUT_ANALOG_WRITE);\r\n        this.setHelpUrl(\"\");\r\n    }\r\n};\r\n\r\n//////////////////LED////////////////\r\nexport const ke_led = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_LED)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_led_yellow.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n/////////////////蜂鸣器//////////////////////\r\n\r\nvar TONE_NOTES = [\r\n    [\"NOTE_C3\", \"131\"], [\"NOTE_D3\", \"147\"], [\"NOTE_E3\", \"165\"], [\"NOTE_F3\", \"175\"], [\"NOTE_G3\", \"196\"], [\"NOTE_A3\", \"220\"], [\"NOTE_B3\", \"247\"],\r\n    [\"NOTE_C4\", \"262\"], [\"NOTE_D4\", \"294\"], [\"NOTE_E4\", \"330\"], [\"NOTE_F4\", \"349\"], [\"NOTE_G4\", \"392\"], [\"NOTE_A4\", \"440\"], [\"NOTE_B4\", \"494\"],\r\n    [\"NOTE_C5\", \"532\"], [\"NOTE_D5\", \"587\"], [\"NOTE_E5\", \"659\"], [\"NOTE_F5\", \"698\"], [\"NOTE_G5\", \"784\"], [\"NOTE_A5\", \"880\"], [\"NOTE_B5\", \"988\"]\r\n];\r\n\r\n\r\nexport const ke_tone01 = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(new Blockly.FieldDropdown(TONE_NOTES), 'STAT');\r\n        this.setOutput(true, Number);\r\n    }\r\n};\r\n\r\n\r\nexport const ke_buzzer = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_BUZZER2)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_buzzer_w.png\"), 39, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendValueInput('FREQUENCY')\r\n            .setCheck(Number)\r\n            //.setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.kids_tone);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.kids_beat)\r\n            .appendField(new Blockly.FieldDropdown([[\"1/8\", \"125\"], [\"3/8\", \"375\"], [\"1/4\", \"250\"], [\"3/4\", \"750\"], [\"1/2\", \"500\"], [\"1\", \"1000\"]]), 'DURATION');\r\n\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setTooltip(Blockly.Msg.MIXLY_TOOLTIP_BLOCKGROUP_TONE);\r\n    }\r\n};\r\n\r\n\r\n///////////music////////////////////\r\nexport const ke_music = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.kids_play_tone)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_buzzer_w.png\"), 39, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            //.appendField(new Blockly.FieldDropdown([[\"Birthday\", \"Birthday\"],[\"City of Sky\", \"City of Sky\"],[\"Ode to Joy\", \"Ode to Joy\"]]), 'play');\r\n            .appendField(new Blockly.FieldDropdown([\r\n                ['Birthday', 'Music.birthday();'],\r\n                ['Tetris', 'Music.tetris();'],\r\n                ['Ode to Joy', 'Music.Ode_to_Joy();'],\r\n                ['Christmas', 'Music.christmas();'],\r\n                ['Super mario', 'Music.super_mario();'],\r\n                ['Star war tone', 'Music.star_war_tone();']\r\n            ]), 'play');\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setTooltip(Blockly.Msg.MIXLY_TOOLTIP_BLOCKGROUP_NOTONE);\r\n    }\r\n};\r\n\r\n////////////////////关闭蜂鸣器////////////////////////\r\nexport const ke_notone = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.kids_notone)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_buzzer_w.png\"), 39, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        //this.setTooltip(Blockly.Msg.MIXLY_TOOLTIP_BLOCKGROUP_NOTONE);\r\n    }\r\n};\r\n\r\n////////////////////////电机///////////////////////////////////\r\n\r\nexport const ke_motor2 = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_MOTOR)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_fs.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN1\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField('INA')\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT1\");\r\n        this.appendValueInput(\"PIN2\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField('INB');\r\n        this.appendValueInput(\"SPEED2\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_MOTOR_ANALOG)\r\n            .setCheck(Number);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n///////////////////////////舵机///////////////////////////////////\r\nexport const ke_servo = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_ke_SERVO)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_servo.png\"), 70, 32))\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendValueInput(\"angle\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_DEGREE_0_180);\r\n        this.appendValueInput(\"time\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_DELAY + '(' + Blockly.Msg.MIXLY_DELAY_MS + ')');\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip(Blockly.Msg.MIXLY_TOOLTIP_BLOCKGROUP_SERVO_MOVE);\r\n    }\r\n};\r\n\r\nexport const ke_servo_r = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_ke_SERVO)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_READ_DEGREES);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip(Blockly.Msg.MIXLY_TOOLTIP_BLOCKGROUP_SERVO_READ);\r\n    }\r\n};\r\n\r\n\r\n///////////人体红外传感器////////////////////\r\nexport const ke_ir_g = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_IR_G)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_rentihongwai.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////按键传感器////////////////////\r\nexport const ke_button = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_BUTTON)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_button.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////烟雾数字传感器////////////////////\r\nexport const ke_smoke_D = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_SMOKE_DATA)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_gas.png\"), 60, 48));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////水蒸气传感器///////////////\r\nexport const ke_steam = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_STEAM)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_steam.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n//////////烟雾传感器///////////////\r\nexport const ke_smoke = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_SMOKE_ANALOG)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_gas.png\"), 60, 48));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n\r\nvar WHAT = [[Blockly.Msg.MIXLY_GETTEMPERATUE, 'temperature'], [Blockly.Msg.MIXLY_GETHUMIDITY, 'humidity']];\r\n\r\nexport const ke_DHT = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(new Blockly.FieldDropdown([['DHT11', '11'], ['DHT21', '21'], ['DHT22', '22']]), 'TYPE')\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_dht11.png\"), 50, 40))\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .appendField(new Blockly.FieldDropdown(profile.default.digital), \"PIN\")\r\n            .appendField(new Blockly.FieldDropdown(WHAT), \"WHAT\");\r\n        this.setOutput(true, Number);\r\n        var thisBlock = this;\r\n        this.setTooltip(function () {\r\n            var op = thisBlock.getFieldValue('WHAT');\r\n            var TOOLTIPS = {\r\n                'temperature': Blockly.Msg.MIXLY_TOOLTIP_BLOCKGROUP_GET_TEM,\r\n                'humidity': Blockly.Msg.MIXLY_TOOLTIP_BLOCKGROUP_GET_HUM\r\n            };\r\n            return TOOLTIPS[op];\r\n        });\r\n    }\r\n};\r\n\r\n//////////////////RGB灯////////////////////////////\r\nexport const RGB_color_seclet = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(new Blockly.FieldColour(\"ff0000\"), \"COLOR\");\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip(Blockly.OLED_DRAW_PIXE_TOOLTIP);\r\n    }\r\n};\r\n\r\nexport const RGB_color_rgb = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendValueInput(\"R\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_RGB_R);\r\n        this.appendValueInput(\"G\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_RGB_G);\r\n        this.appendValueInput(\"B\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_RGB_B);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\nvar DISPLAY_RGB_TYPE = [\r\n    [\"NEO_GRB\", \"NEO_GRB\"],\r\n    [\"NEO_RGB\", \"NEO_RGB\"],\r\n    [\"NEO_RGBW\", \"NEO_RGBW\"]\r\n];\r\n\r\n//RGB\r\nexport const display_rgb_init = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_RGB + Blockly.Msg.MIXLY_SETUP)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .appendField(new Blockly.FieldDropdown(profile.default.digital), \"PIN\")\r\n            .setAlign(Blockly.ALIGN_RIGHT);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_MICROPYTHON_SOCKET_TYPE)\r\n            .appendField(new Blockly.FieldDropdown(DISPLAY_RGB_TYPE), \"TYPE\");\r\n        this.appendValueInput(\"LEDCOUNT\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_RGB_COUNT);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip('');\r\n        //  this.setFieldValue(\"12\", \"PIN\");\r\n    }\r\n};\r\n\r\nexport const display_rgb_Brightness = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_RGB)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .appendField(new Blockly.FieldDropdown(profile.default.digital), \"PIN\")\r\n            .setAlign(Blockly.ALIGN_RIGHT);\r\n        this.appendValueInput(\"Brightness\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_BRIGHTNESS);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip('');\r\n        //  this.setFieldValue(\"12\", \"PIN\");\r\n    }\r\n};\r\n\r\n\r\nexport const display_rgb = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_RGB)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .appendField(new Blockly.FieldDropdown(profile.default.digital), \"PIN\")\r\n            .setAlign(Blockly.ALIGN_RIGHT);\r\n        this.appendValueInput(\"_LED_\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_RGB_NUM);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.HTML_COLOUR);\r\n        this.appendValueInput(\"COLOR\", Number)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip('');\r\n        // this.setFieldValue(\"12\", \"PIN\");\r\n    }\r\n};\r\n\r\nexport const display_rgb_show = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_RGB_SHOW)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .appendField(new Blockly.FieldDropdown(profile.default.digital), \"PIN\")\r\n            .setAlign(Blockly.ALIGN_RIGHT);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\nvar DISPLAY_RAINBOW_TYPE = [\r\n    [Blockly.Msg.MIXLY_RGB_DISPLAY_RAINBOW_TYPE_1, \"normal\"],\r\n    [Blockly.Msg.MIXLY_RGB_DISPLAY_RAINBOW_TYPE_2, \"change\"]\r\n];\r\n\r\n\r\nexport const display_rgb_rainbow1 = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_RGB)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .appendField(new Blockly.FieldDropdown(profile.default.digital), \"PIN\")\r\n            .setAlign(Blockly.ALIGN_RIGHT);\r\n        this.appendValueInput(\"WAIT\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_RGBdisplay_rgb_rainbow1);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        // this.setFieldValue(\"12\", \"PIN\");\r\n    }\r\n};\r\n\r\nexport const display_rgb_rainbow3 = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_RGB)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .appendField(new Blockly.FieldDropdown(profile.default.digital), \"PIN\")\r\n            .setAlign(Blockly.ALIGN_RIGHT);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(new Blockly.FieldDropdown(DISPLAY_RAINBOW_TYPE), \"TYPE\");\r\n        this.appendValueInput(\"rainbow_color\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_RGB_display_rgb_rainbow3);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        // this.setFieldValue(\"12\", \"PIN\");\r\n    }\r\n};\r\n\r\nexport const RGB_color_HSV = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_RGB)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .appendField(new Blockly.FieldDropdown(profile.default.digital), \"PIN\")\r\n            .setAlign(Blockly.ALIGN_RIGHT);\r\n        this.appendValueInput(\"_LED_\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_RGB_NUM);\r\n        this.appendValueInput(\"H\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.HSV_H);\r\n        this.appendValueInput(\"S\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.HSV_S);\r\n        this.appendValueInput(\"V\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.HSV_V);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip('色调范围0-65536;饱和度范围0-255;明度范围0-255');\r\n    }\r\n};\r\n\r\n///////////////////1602LCD IIC//////////////////////\r\nexport const group_lcd_init2 = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendValueInput('device')\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_SETUP)\r\n            .appendField(Blockly.Msg.MIXLY_DF_LCD)\r\n            .appendField(new Blockly.FieldDropdown([['1602', '16,2'], ['2004', '20,4']]), 'TYPE')\r\n            .appendField(new Blockly.FieldTextInput('mylcd'), 'VAR')\r\n            .appendField(Blockly.Msg.MIXLY_LCD_ADDRESS);\r\n        this.appendValueInput(\"SCL\", Number)\r\n            .appendField('SCL')\r\n            .setCheck(Number);\r\n        this.appendValueInput(\"SDA\", Number)\r\n            .appendField('SDA')\r\n            .setCheck(Number);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setInputsInline(true);\r\n        this.setTooltip(Blockly.Msg.MIXLY_TOOLTIP_LCD_INIT2);\r\n    }\r\n};\r\n\r\n\r\nexport const group_lcd_print = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendValueInput(\"TEXT\", String)\r\n            .setCheck([String, Number])\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_DF_LCD)\r\n            .appendField(new Blockly.FieldTextInput('mylcd'), 'VAR')\r\n            .appendField(Blockly.Msg.MIXLY_LCD_PRINT1);\r\n        this.appendValueInput(\"TEXT2\", String)\r\n            .setCheck([String, Number])\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_LCD_PRINT2);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip(Blockly.Msg.MIXLY_TOOLTIP_LCD_PRINT);\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const group_lcd_power = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_DF_LCD)\r\n            .appendField(new Blockly.FieldTextInput('mylcd'), 'VAR')\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.MIXLY_ON, \"display\"], [Blockly.Msg.MIXLY_OFF, \"noDisplay\"], [Blockly.Msg.MIXLY_LCD_STAT_CURSOR, \"cursor\"], [Blockly.Msg.MIXLY_LCD_STAT_NOCURSOR, \"noCursor\"], [Blockly.Msg.MIXLY_LCD_STAT_BLINK, \"blink\"], [Blockly.Msg.MIXLY_LCD_STAT_NOBLINK, \"noBlink\"], [Blockly.Msg.MIXLY_LCD_STAT_CLEAR, \"clear\"], [Blockly.Msg.MIXLY_LCD_NOBACKLIGHT, \"noBacklight\"], [Blockly.Msg.MIXLY_LCD_BACKLIGHT, \"backlight\"]]), \"STAT\");\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip(Blockly.Msg.MIXLY_TOOLTIP_LCD_POWER);\r\n    }\r\n};\r\n\r\n//////////////////////RFID////////////////////////////\r\nexport const rc522_i2c_init = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_rc522_iic_init)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/rc522_iic.png\"), 60, 40));\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setInputsInline(true);\r\n    }\r\n};\r\n\r\nexport const rc522_i2c_read = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_rc522_iic_read)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/rc522_iic.png\"), 60, 40));\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n//////////////////////蓝牙////////////////////////////\r\nexport const ke_bluetooth = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendValueInput(\"PIN1\", Number)\r\n            .appendField(new Blockly.FieldTextInput('val'), 'VAL')\r\n            .appendField(Blockly.Msg.MIXLY_ke_BLUETOOTH)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_bluetooth.png\"), 70, 32))\r\n            .appendField(\"RX:\")\r\n            .setCheck(Number);\r\n        this.appendValueInput(\"PIN2\", Number)\r\n            .appendField(\"TX:\")\r\n            .setCheck(Number);\r\n        this.appendStatementInput('DO')\r\n            .appendField(Blockly.Msg.MIXLY_ke_read);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setInputsInline(true);\r\n        this.setTooltip(\"bluetooth\");\r\n    },\r\n    getVars: function () {\r\n        return [this.getFieldValue('VAL')];\r\n    },\r\n    renameVar: function (oldName, newName) {\r\n        if (Blockly.Names.equals(oldName, this.getFieldValue('VAL'))) {\r\n            this.setTitleValue(newName, 'VAL');\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\n////////////////////WIFI////////////////////////////\r\n\r\nexport const wifi_init = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_WIFI_INIT);\r\n        //.appendField(new Blockly.FieldImage(require(\"../media/rc522_iic.png\"), 60, 40));\r\n        this.appendValueInput(\"SSID\", String)\r\n            .setCheck([String, Number])\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"SSID\")\r\n            .appendField(Blockly.Msg.MIXLY_WIFI_NAME);\r\n        this.appendValueInput(\"PASSWD\", String)\r\n            .setCheck([String, Number])\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"PASSWD\")\r\n            .appendField(Blockly.Msg.MIXLY_WIFI_PASSWORD);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n\r\nexport const wifi_read = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_WIFI_READ);\r\n        //.appendField(new Blockly.FieldImage(require(\"../media/rc522_iic.png\"), 60, 40));\r\n\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\nexport const client_print = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_CLIENT_PRINT)\r\n            .appendField(new Blockly.FieldDropdown([\r\n                [\"led_on\", \"turn on the LED\"],\r\n                [\"led_off\", \"turn off the LED\"],\r\n                [\"window_on\", \"open the window\"],\r\n                [\"window_off\", \"close the window\"],\r\n                [\"play_musis\", \"play music\"],\r\n                [\"buzzer_on\", \"buzzer on\"],\r\n                [\"buzzer_off\", \"buzzer off\"],\r\n                [\"door_open\", \"open the door\"],\r\n                [\"door_close\", \"close the door\"],\r\n                [\"fan_on\", \"turn on the fan\"],\r\n                [\"fan_off\", \"turn off the fan\"],\r\n                [\"red_on\", \"red on\"],\r\n                [\"red_off\", \"red off\"],\r\n                [\"oringe_on\", \"oringe on\"],\r\n                [\"oringe_off\", \"oringe off\"],\r\n                [\"yellow_on\", \"yellow on\"],\r\n                [\"yellow_off\", \"yellow off\"],\r\n                [\"geeen_on\", \"green on\"],\r\n                [\"green_off\", \"green off\"],\r\n                [\"cyan_on\", \"cyan on\"],\r\n                [\"cyan_off\", \"cyan off\"],\r\n                [\"blue_on\", \"blue on\"],\r\n                [\"blue_off\", \"blue off\"],\r\n                [\"purple_on\", \"purple on\"],\r\n                [\"purple_off\", \"purple off\"],\r\n                [\"white_on\", \"white on\"],\r\n                [\"white_off\", \"white off\"],\r\n                [\"sfx1_on\", \"sfx1 on\"],\r\n                [\"sfx1_off\", \"sfx1 off\"],\r\n                [\"sfx2_on\", \"sfx2 on\"],\r\n                [\"sfx2_off\", \"sfx2 off\"],\r\n                [\"off\", \"off\"],\r\n                [\"on\", \"on\"],\r\n                [\"safety\", \"safety\"],\r\n                [\"dangerous\", \"dangerous\"],\r\n                [\"some_one\", \"someone\"],\r\n                [\"no_one\", \"no one\"]]), 'DATA');\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip();\r\n    }\r\n};\r\n\r\n\r\nexport const dht_print = {\r\n    init: function () {\r\n        this.setColour(SMART_HOME_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_DHT_PRINT)\r\n            .appendField(new Blockly.FieldDropdown(profile.default.digital), \"PIN\")\r\n            .appendField(new Blockly.FieldDropdown([\r\n                [\"temp_on\", '.readTemperature()'],\r\n                [\"humidity_on\", '.readHumidity()']\r\n            ]), 'SATA');\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip();\r\n    }\r\n};","import { JSFuncs } from 'mixly';\r\n\r\n////////////////////模拟输出////////////////////\r\n\r\nexport const ke_a_Write = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var ch = this.getFieldValue('channel');\r\n    var value_num = generator.valueToCode(this, 'NUM', generator.ORDER_ATOMIC);\r\n    generator.setups_['ke_a_Write'] = 'ledcSetup('+ch+', 490, 8);';\r\n    generator.setups_['led_ch'] = 'ledcAttachPin('+dropdown_pin+', '+ch+');';\r\n\r\n    return `ledcWrite(${ch}, ${value_num});\\n`;\r\n};\r\n\r\n////////////////////LED////////////////////\r\nexport const ke_led = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var dropdown_stat = this.getFieldValue('STAT');\r\n    generator.setups_['setup_output_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n    var code = 'digitalWrite(' + dropdown_pin + ',' + dropdown_stat + ');\\n'\r\n    return code;\r\n};\r\n\r\n////////////////////蜂鸣器////////////////////\r\n\r\nexport const ke_tone01 = function (_, generator) {\r\n    var code = this.getFieldValue('STAT');\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n\r\nexport const ke_buzzer = function (block, generator) {\r\n    var pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var fre = generator.valueToCode(block, 'FREQUENCY', generator.ORDER_ATOMIC);\r\n    var dur = this.getFieldValue('DURATION');\r\n\r\n    generator.definitions_['include_tone_init'] = '#include <ESP32Tone.h>\\n';\r\n    generator.setups_[`buzzer_${pin}`] = 'pinMode(' + pin + ', OUTPUT);\\n';\r\n    var code = 'tone(' + pin + ', ' + fre + ', ' + dur + ', 0);\\n';\r\n    return code;\r\n};\r\n\r\nexport const ke_music = function (block, generator) {\r\n    var pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var play = this.getFieldValue('play');\r\n    generator.definitions_['include_music_init'] = '#include <ESP32Tone.h>\\n#include <musicESP32.h>\\n';\r\n\r\n    generator.definitions_[`music_${pin}`] = 'music Music(' + pin + ');';\r\n\r\n    generator.setups_[`buzzer_${pin}`] = 'pinMode(' + pin + ', OUTPUT);\\n';\r\n\r\n    var code = '' + play + '\\n';\r\n    return code;\r\n\r\n};\r\n\r\nexport const ke_notone = function (block, generator) {\r\n    var pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    generator.setups_[`buzzer_${pin}`] = 'pinMode(' + pin + ', OUTPUT);\\n';\r\n\r\n    var code = 'noTone(' + pin + ', 0);\\n';\r\n    return code;\r\n\r\n};\r\n\r\n////////////////////电机////////////////////\r\n\r\nexport const ke_motor2 = function (block, generator) {\r\n    var pin1 = generator.valueToCode(this, 'PIN1', generator.ORDER_ATOMIC);\r\n    var pin2 = generator.valueToCode(this, 'PIN2', generator.ORDER_ATOMIC);\r\n    //const val1 = generator.valueToCode(block, 'SPEED1', generator.ORDER_ATOMIC);\r\n    var state1 = this.getFieldValue('STAT1');\r\n    var val2 = generator.valueToCode(this, 'SPEED2', generator.ORDER_ATOMIC);\r\n\r\n    generator.setups_[`ke_motor2`] = 'pinMode(' + pin1 + ', OUTPUT);\\n  ledcSetup(5, 1200, 8);\\n  ledcAttachPin(' + pin2 + ', 5);\\n';\r\n\r\n    var code = 'digitalWrite(' + pin1 + ',' + state1 + ');\\nledcWrite(5, ' + val2 + ');\\n';\r\n    return code;\r\n\r\n};\r\n\r\n\r\n\r\n////////////////////舵机////////////////////\r\nexport const ke_servo = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var value_degree = generator.valueToCode(this, 'angle', generator.ORDER_ATOMIC);\r\n    //value_degree = value_degree.replace('(','').replace(')','')\r\n    var delay_time = generator.valueToCode(this, 'time', generator.ORDER_ATOMIC) || '0'\r\n    //delay_time = delay_time.replace('(','').replace(')','');\r\n\r\n    generator.definitions_['include_ESP32_Servo'] = '#include <ESP32_Servo.h>';\r\n    generator.definitions_['var_servo' + dropdown_pin] = 'Servo servo_' + dropdown_pin + ';';\r\n    generator.setups_['setup_servo_' + dropdown_pin] = 'servo_' + dropdown_pin + '.attach(' + dropdown_pin + ');';\r\n\r\n    var code = 'servo_' + dropdown_pin + '.write(' + value_degree + ');\\n' + 'delay(' + delay_time + ');\\n';\r\n    return code;\r\n};\r\n\r\nexport const ke_servo_r = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n\r\n    generator.definitions_['include_ESP32_Servo'] = '#include <ESP32_Servo.h>';\r\n    generator.definitions_['var_servo' + dropdown_pin] = 'Servo servo_' + dropdown_pin + ';';\r\n    generator.setups_['setup_servo_' + dropdown_pin] = 'servo_' + dropdown_pin + '.attach(' + dropdown_pin + ');';\r\n\r\n    var code = 'servo_' + dropdown_pin + '.read()';\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n\r\n//////////////////////////数字传感器////////////////////////////////\r\n\r\nexport const ke_ir_g = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_input_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', INPUT);';\r\n    var code = 'digitalRead(' + dropdown_pin + ')';\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n\r\n/////////////////按键传感器////////////////\r\nexport const ke_button = ke_ir_g;\r\n/////////////////烟雾数字传感器/////////////////\r\nexport const ke_smoke_D = ke_ir_g;\r\n\r\n//////////////////////模拟传感器/////////////////////////\r\nexport const ke_sound = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_input_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', INPUT);';\r\n    var code = 'analogRead(' + dropdown_pin + ')';\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n\r\n////////////////////水蒸气////////////////////\r\n///\r\nexport const ke_steam = ke_sound;\r\n\r\n\r\n\r\n////////////////////烟雾////////////////////\r\n\r\nexport const ke_smoke = ke_sound;\r\n\r\n\r\n//////////////////////////DHT11///////////////////////////\r\n\r\n\r\nexport const ke_DHT = function (_, generator) {\r\n    var sensor_type = this.getFieldValue('TYPE');\r\n    var dropdown_pin = this.getFieldValue('PIN');\r\n    var what = this.getFieldValue('WHAT');\r\n    generator.definitions_['include_DHT'] = '#include <DHT.h>';\r\n    generator.definitions_['var_declare_dht' + dropdown_pin] = 'DHT dht' + dropdown_pin + '(' + dropdown_pin + ', ' + sensor_type + ');'\r\n    generator.setups_['DHT_SETUP' + dropdown_pin] = ' dht' + dropdown_pin + '.begin();';\r\n    var code;\r\n    if (what == \"temperature\")\r\n        code = 'dht' + dropdown_pin + '.readTemperature()'\r\n    else\r\n        code = 'dht' + dropdown_pin + '.readHumidity()'\r\n    return [code, generator.ORDER_ATOMIC];\r\n}\r\n////////////////////////////////////////////////////\r\n//////////////////////////显示屏///////////////////\r\n//////////////////////////////////////////////////////////\r\n\r\n///////////////////////////RGB灯/////////////////\r\nexport const RGB_color_seclet = function (_, generator) {\r\n    var colour = this.getFieldValue('COLOR');\r\n    colour = '0x' + colour.substring(1, colour.length);\r\n    return [colour, generator.ORDER_NONE];\r\n};\r\n\r\nexport const RGB_color_rgb = function (_, generator) {\r\n    var R = generator.valueToCode(this, 'R', generator.ORDER_ATOMIC);\r\n    var G = generator.valueToCode(this, 'G', generator.ORDER_ATOMIC);\r\n    var B = generator.valueToCode(this, 'B', generator.ORDER_ATOMIC);\r\n    var colour = \"((\" + R + \" & 0xffffff) << 16) | ((\" + G + \" & 0xffffff) << 8) | \" + B;\r\n    return [colour, generator.ORDER_NONE];\r\n};\r\n\r\nexport const display_rgb_init = function (_, generator) {\r\n    var dropdown_rgbpin = this.getFieldValue('PIN');\r\n    var type = this.getFieldValue('TYPE');\r\n    var value_ledcount = generator.valueToCode(this, 'LEDCOUNT', generator.ORDER_ATOMIC);\r\n    generator.definitions_['include_Adafruit_NeoPixel'] = '#include <Adafruit_NeoPixel.h>';\r\n    generator.definitions_['var_declare_rgb_display' + dropdown_rgbpin] = 'Adafruit_NeoPixel rgb_display_' + dropdown_rgbpin + ' = Adafruit_NeoPixel(' + value_ledcount + ',' + dropdown_rgbpin + ',' + type + ' + NEO_KHZ800);';\r\n    generator.setups_['setup_rgb_display_begin_' + dropdown_rgbpin] = 'rgb_display_' + dropdown_rgbpin + '.begin();';\r\n    return '';\r\n};\r\n\r\nexport const display_rgb_Brightness = function (_, generator) {\r\n    var dropdown_rgbpin = this.getFieldValue('PIN');\r\n    var Brightness = generator.valueToCode(this, 'Brightness', generator.ORDER_ATOMIC);\r\n    generator.definitions_['include_Adafruit_NeoPixel'] = '#include <Adafruit_NeoPixel.h>';\r\n    generator.setups_['setup_rgb_display_begin_' + dropdown_rgbpin] = 'rgb_display_' + dropdown_rgbpin + '.begin();';\r\n    var code = 'rgb_display_' + dropdown_rgbpin + '.setBrightness(' + Brightness + ');\\n';\r\n    return code;\r\n};\r\n\r\nexport const display_rgb = function (_, generator) {\r\n    var dropdown_rgbpin = this.getFieldValue('PIN');\r\n    var value_led = generator.valueToCode(this, '_LED_', generator.ORDER_ATOMIC);\r\n    var COLOR = generator.valueToCode(this, 'COLOR', generator.ORDER_ATOMIC);\r\n    COLOR = COLOR.replace(/#/g, \"0x\");\r\n    var code = 'rgb_display_' + dropdown_rgbpin + '.setPixelColor((' + value_led + ')-1, ' + COLOR + ');\\n';\r\n    return code;\r\n};\r\n\r\nexport const RGB_color_HSV = function (_, generator) {\r\n    var dropdown_rgbpin = this.getFieldValue('PIN');\r\n    var value_led = generator.valueToCode(this, '_LED_', generator.ORDER_ATOMIC);\r\n    var H = generator.valueToCode(this, 'H', generator.ORDER_ATOMIC);\r\n    var S = generator.valueToCode(this, 'S', generator.ORDER_ATOMIC);\r\n    var V = generator.valueToCode(this, 'V', generator.ORDER_ATOMIC);\r\n    var code = 'rgb_display_' + dropdown_rgbpin + '.setPixelColor((' + value_led + ')-1, ' + 'rgb_display_' + dropdown_rgbpin + '.ColorHSV(' + H + ',' + S + ',' + V + '));\\n';\r\n    return code;\r\n};\r\n\r\nexport const display_rgb_show = function () {\r\n    var dropdown_rgbpin = this.getFieldValue('PIN');\r\n    var code = 'rgb_display_' + dropdown_rgbpin + '.show();\\n';\r\n    return code;\r\n};\r\n\r\nexport const display_rgb_rainbow1 = function (_, generator) {\r\n    var dropdown_rgbpin = this.getFieldValue('PIN');\r\n    var wait_time = generator.valueToCode(this, 'WAIT', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_rgb_display_begin_' + dropdown_rgbpin] = 'rgb_display_' + dropdown_rgbpin + '.begin();\\n';\r\n    var funcName2 = 'Wheel';\r\n    var code2 = 'uint32_t Wheel(byte WheelPos){\\n'\r\n        + '  if(WheelPos < 85){\\n'\r\n        + '    return rgb_display_' + dropdown_rgbpin + '.Color(WheelPos * 3, 255 - WheelPos * 3, 0);\\n'\r\n        + '  }\\n'\r\n        + '  else if(WheelPos < 170){\\n'\r\n        + '    WheelPos -= 85;\\n'\r\n        + '    return rgb_display_' + dropdown_rgbpin + '.Color(255 - WheelPos * 3, 0, WheelPos * 3);\\n'\r\n        + '  }\\n '\r\n        + '  else{\\n'\r\n        + '    WheelPos -= 170;\\n'\r\n        + '    return rgb_display_' + dropdown_rgbpin + '.Color(0, WheelPos * 3, 255 - WheelPos * 3);\\n'\r\n        + '  }\\n'\r\n        + '}\\n';\r\n    generator.definitions_[funcName2] = code2;\r\n    var funcName3 = 'rainbow';\r\n    var code3 = 'void rainbow(uint8_t wait){\\n'\r\n        + '  uint16_t i, j;\\n'\r\n        + '  for(j=0; j<256; j++){\\n'\r\n        + '    for(i=0; i<rgb_display_' + dropdown_rgbpin + '.numPixels(); i++){\\n'\r\n        + '      rgb_display_' + dropdown_rgbpin + '.setPixelColor(i, Wheel((i+j) & 255));\\n'\r\n        + '    }\\n'\r\n        + '    rgb_display_' + dropdown_rgbpin + '.show();\\n'\r\n        + '    delay(wait);\\n'\r\n        + '  }\\n'\r\n        + '}\\n';\r\n    generator.definitions_[funcName3] = code3;\r\n    var code = 'rainbow(' + wait_time + ');\\n'\r\n    return code;\r\n};\r\n\r\nexport const display_rgb_rainbow2 = function (_, generator) {\r\n    var dropdown_rgbpin = this.getFieldValue('PIN');\r\n    var wait_time = generator.valueToCode(this, 'WAIT', generator.ORDER_ATOMIC);\r\n    var funcName2 = 'Wheel';\r\n    var code2 = 'uint32_t Wheel(byte WheelPos){\\n'\r\n        + '  if(WheelPos < 85){\\n'\r\n        + '    return rgb_display_' + dropdown_rgbpin + '.Color(WheelPos * 3, 255 - WheelPos * 3, 0);\\n'\r\n        + '  }\\n'\r\n        + '  else if(WheelPos < 170){\\n'\r\n        + '    WheelPos -= 85;\\n'\r\n        + '    return rgb_display_' + dropdown_rgbpin + '.Color(255 - WheelPos * 3, 0, WheelPos * 3);\\n'\r\n        + '  }\\n'\r\n        + '  else{\\n'\r\n        + '    WheelPos -= 170;\\n'\r\n        + '    return rgb_display_' + dropdown_rgbpin + '.Color(0, WheelPos * 3, 255 - WheelPos * 3);\\n'\r\n        + '  }\\n'\r\n        + '}\\n';\r\n    generator.definitions_[funcName2] = code2;\r\n    var funcName3 = 'rainbow';\r\n    var code3 = 'void rainbow(uint8_t wait){\\n'\r\n        + '  uint16_t i, j;\\n'\r\n        + '  for(j=0; j<256; j++){\\n'\r\n        + '    for(i=0; i<rgb_display_' + dropdown_rgbpin + '.numPixels(); i++){\\n'\r\n        + '      rgb_display_' + dropdown_rgbpin + '.setPixelColor(i, Wheel((i+j) & 255));\\n'\r\n        + '    }\\n'\r\n        + '    rgb_display_' + dropdown_rgbpin + '.show();\\n'\r\n        + '    delay(wait);\\n'\r\n        + '  }\\n'\r\n        + '}\\n';\r\n    generator.definitions_[funcName3] = code3;\r\n    var funcName4 = 'rainbowCycle';\r\n    var code4 = 'void rainbowCycle(uint8_t wait){\\n'\r\n        + '  uint16_t i, j;\\n'\r\n        + '  for(j=0; j<256*5; j++){\\n'\r\n        + '    for(i=0; i< rgb_display_' + dropdown_rgbpin + '.numPixels(); i++){\\n'\r\n        + '      rgb_display_' + dropdown_rgbpin + '.setPixelColor(i, Wheel(((i * 256 / rgb_display_' + dropdown_rgbpin + '.numPixels()) + j) & 255));\\n'\r\n        + '    }\\n'\r\n        + '    rgb_display_' + dropdown_rgbpin + '.show();\\n'\r\n        + '    delay(wait);\\n'\r\n        + '  }\\n'\r\n        + '}\\n';\r\n    generator.definitions_[funcName4] = code4;\r\n    var code = 'rainbowCycle(' + wait_time + ');\\n'\r\n    return code;\r\n};\r\n\r\nexport const display_rgb_rainbow3 = function (_, generator) {\r\n    var dropdown_rgbpin = this.getFieldValue('PIN');\r\n    var rainbow_color = generator.valueToCode(this, 'rainbow_color', generator.ORDER_ATOMIC);\r\n    var type = this.getFieldValue('TYPE');\r\n    var funcName2 = 'Wheel';\r\n    var code2 = 'uint32_t Wheel(byte WheelPos){\\n'\r\n        + '  if(WheelPos < 85){\\n'\r\n        + '    return rgb_display_' + dropdown_rgbpin + '.Color(WheelPos * 3, 255 - WheelPos * 3, 0);\\n'\r\n        + '  }\\n'\r\n        + '  else if(WheelPos < 170){\\n'\r\n        + '    WheelPos -= 85;\\n'\r\n        + '    return rgb_display_' + dropdown_rgbpin + '.Color(255 - WheelPos * 3, 0, WheelPos * 3);\\n'\r\n        + '  }\\n'\r\n        + '  else{\\n'\r\n        + '    WheelPos -= 170;return rgb_display_' + dropdown_rgbpin + '.Color(0, WheelPos * 3, 255 - WheelPos * 3);\\n'\r\n        + '  }\\n'\r\n        + '}\\n';\r\n    generator.definitions_[funcName2] = code2;\r\n    var code3 = '';\r\n    if (type == \"normal\")\r\n        code3 = 'for(int RGB_RAINBOW_i = 0; RGB_RAINBOW_i < rgb_display_' + dropdown_rgbpin + '.numPixels(); RGB_RAINBOW_i++){\\n'\r\n            + '  rgb_display_' + dropdown_rgbpin + '.setPixelColor(RGB_RAINBOW_i, Wheel(' + rainbow_color + ' & 255));\\n'\r\n            + '}\\n'\r\n            + 'rgb_display_' + dropdown_rgbpin + '.show();\\n';\r\n    else\r\n        code3 = 'for(int RGB_RAINBOW_i = 0; RGB_RAINBOW_i < rgb_display_' + dropdown_rgbpin + '.numPixels(); RGB_RAINBOW_i++){\\n'\r\n            + '  rgb_display_' + dropdown_rgbpin + '.setPixelColor(RGB_RAINBOW_i, Wheel(((RGB_RAINBOW_i * 256 / rgb_display_' + dropdown_rgbpin + '.numPixels()) + ' + rainbow_color + ') & 255));\\n'\r\n            + '}\\n'\r\n            + 'rgb_display_' + dropdown_rgbpin + '.show();\\n';\r\n    return code3;\r\n};\r\n\r\n\r\n////////////////////////////////////lcd 1602////////////////////////////////////\r\n\r\nexport const group_lcd_init2 = function (_, generator) {\r\n    var varName = this.getFieldValue('VAR');\r\n    var TYPE = this.getFieldValue('TYPE');\r\n    var SCL = generator.valueToCode(this, 'SCL', generator.ORDER_ATOMIC);\r\n    var SDA = generator.valueToCode(this, 'SDA', generator.ORDER_ATOMIC);\r\n    var board_type = JSFuncs.getPlatform();\r\n    var device = generator.valueToCode(this, 'device', generator.ORDER_ATOMIC) || '0x27';\r\n    if (SDA == \"SDA\" && SCL == \"SCL\") {\r\n        generator.definitions_['include_Wire'] = '#include <Wire.h>';\r\n        generator.definitions_['include_LiquidCrystal_I2C'] = '#include <LiquidCrystal_I2C.h>';\r\n        generator.definitions_['var_declare_LiquidCrystal_I2C_' + varName] = 'LiquidCrystal_I2C ' + varName + '(' + device + ',' + TYPE + ');';\r\n    }\r\n    else {\r\n        if (board_type.match(RegExp(/AVR/))) {\r\n            generator.definitions_['include_SoftI2CMaster'] = '#include <SoftI2CMaster.h>';\r\n            generator.definitions_['include_LiquidCrystal_SoftI2C'] = '#include <LiquidCrystal_SoftI2C.h>';\r\n            generator.definitions_['var_declare_LiquidCrystal_SoftI2C_' + varName] = 'LiquidCrystal_SoftI2C ' + varName + '(' + device + ',' + TYPE + ',' + SCL + ',' + SDA + ');';\r\n        }\r\n        else {\r\n            generator.definitions_['include_Wire'] = '#include <Wire.h>';\r\n            generator.definitions_['include_LiquidCrystal_SoftI2C'] = '#include <LiquidCrystal_I2C.h>';\r\n            generator.definitions_['var_declare_LiquidCrystal_I2C_' + varName] = 'LiquidCrystal_I2C ' + varName + '(' + device + ',' + TYPE + ');';\r\n            generator.setups_[\"setup_Wire\"] = 'Wire.begin(' + SDA + ',' + SCL + ');';\r\n        }\r\n    }\r\n    generator.setups_['setup_lcd_init_' + varName] = varName + '.init();';\r\n    generator.setups_['setup_lcd_backlight_' + varName] = varName + '.backlight();';\r\n    return '';\r\n};\r\n\r\n\r\n\r\nexport const group_lcd_print = function (_, generator) {\r\n    var varName = this.getFieldValue('VAR');\r\n    var str1 = generator.valueToCode(this, 'TEXT', generator.ORDER_ATOMIC) || '\"\"';\r\n    var str2 = generator.valueToCode(this, 'TEXT2', generator.ORDER_ATOMIC) || '\"\"';\r\n\r\n    var code = varName + '.setCursor(0, 0);\\n'\r\n    code += varName + '.print(' + str1 + ');\\n';\r\n    code += varName + '.setCursor(0, 1);\\n';\r\n    code += varName + '.print(' + str2 + ');\\n';\r\n    //code+=varName+'.setCursor(0, 2);\\n';\r\n    //code+=varName+'.print('+str3+');\\n';\r\n    //code+=varName+'.setCursor(0, 3);\\n';\r\n    //code+=varName+'.print('+str4+');\\n';\r\n    return code;\r\n};\r\n\r\n\r\n\r\nexport const group_lcd_power = function () {\r\n    var varName = this.getFieldValue('VAR');\r\n    var dropdown_stat = this.getFieldValue('STAT');\r\n    var code = varName + '.' + dropdown_stat + '();\\n'\r\n    return code;\r\n};\r\n\r\n\r\n////////////////////////////////通讯///////////////////////////////\r\n\r\n\r\n\r\n\r\n//////////////////////RFID////////////////////////////\r\nexport const rc522_i2c_init = function (_, generator) {\r\n    generator.definitions_['1include_rc522_iic_init'] = '#include <Wire.h>\\n#include <MFRC522_I2C.h>\\nMFRC522 mfrc522(0x28);\\nString rfid_str = \"\";\\n';\r\n    generator.definitions_['1include_rc522_iic_data'] = 'String return_rfid_data()\\n' +\r\n        '{\\n' +\r\n        '  if ( ! mfrc522.PICC_IsNewCardPresent() || ! mfrc522.PICC_ReadCardSerial() ) {\\n' +\r\n        '    delay(50);\\n' +\r\n        '    return \"0\";\\n' +\r\n        '  }\\n' +\r\n        '  rfid_str = \"\";\\n' +\r\n        '  for (byte i = 0; i < mfrc522.uid.size; i++) {\\n' +\r\n        '    rfid_str = rfid_str + String(mfrc522.uid.uidByte[i],HEX);\\n' +\r\n        '  }\\n' +\r\n        '  return rfid_str;\\n' +\r\n        '}\\n';\r\n\r\n    generator.setups_['1setup_rc522_iic'] = 'Wire.begin();\\nmfrc522.PCD_Init();\\n';\r\n\r\n    return '';\r\n};\r\n\r\n\r\nexport const rc522_i2c_read = function (_, generator) {\r\n    return ['return_rfid_data()', generator.ORDER_ATOMIC];\r\n};\r\n\r\n\r\n/////////////////////////////////////蓝牙////////////////////////////////////\r\nexport const ke_bluetooth = function (_, generator) {\r\n    var val = this.getFieldValue('VAL');\r\n    var branch = generator.statementToCode(this, 'DO');\r\n    var dropdown_pin1 = generator.valueToCode(this, 'PIN1', generator.ORDER_ATOMIC);\r\n    var dropdown_pin2 = generator.valueToCode(this, 'PIN2', generator.ORDER_ATOMIC);\r\n\r\n\r\n    generator.definitions_['include_Soft'] = '#include <SoftwareSerial.h>\\n';\r\n    generator.definitions_['mySerial'] = 'SoftwareSerial mySerial(' + dropdown_pin1 + ', ' + dropdown_pin2 + ');\\n';\r\n    generator.definitions_['char'] = 'char ' + val + ';\\n';\r\n\r\n    generator.setups_['mySerial23'] = 'mySerial.begin(9600);';\r\n\r\n    var code = 'if (mySerial.available())\\n{\\n' + val + ' = mySerial.read();\\n';\r\n    code += branch;\r\n    code += '}\\n';\r\n    return code;\r\n};\r\n\r\n/////////////////////////////////////WIFI////////////////////////////////////\r\nexport const wifi_init = function (block, generator) {\r\n    var ssid = generator.valueToCode(block, 'SSID', generator.ORDER_ATOMIC);\r\n    var passwd = generator.valueToCode(block, 'PASSWD', generator.ORDER_ATOMIC);\r\n    generator.definitions_['wifi_init'] = '#include <WiFi.h>\\n#include <ESPmDNS.h>\\n#include <WiFiClient.h>\\n';\r\n\r\n    generator.definitions_['wifi_init2'] = 'const char* ssid = ' + ssid + ';\\nconst char* password = ' + passwd + ';\\nWiFiServer server(80);\\n';\r\n    generator.setups_['wifi_setup'] = 'Serial.begin(115200);\\n   WiFi.begin(ssid, password);\\n   while (WiFi.status() != WL_CONNECTED) {\\n   delay(500);\\n   Serial.print(\".\");\\n    }\\n    Serial.println(\"\");\\n    Serial.print(\"Connected to \");\\n    Serial.println(ssid);\\n    Serial.print(\"IP address: \");\\n    Serial.println(WiFi.localIP());\\n    server.begin();\\n    Serial.println(\"TCP server started\");\\n    MDNS.addService(\"http\", \"tcp\", 80);\\n';\r\n\r\n    return `WiFiClient client = server.available();\\n    if (!client) {\\n        return;\\n    }\\n    while(client.connected() && !client.available()){\\n        delay(1);\\n    }\\n    String req = client.readStringUntil('\\\\r');\\n    int addr_start = req.indexOf(' ');\\n    int addr_end = req.indexOf(' ', addr_start + 1);\\n    if (addr_start == -1 || addr_end == -1) {\\n        Serial.print(\"Invalid request: \");\\n        Serial.println(req);\\n        return;\\n    }\\nreq = req.substring(addr_start + 1, addr_end);\\n`;\r\n\r\n};\r\n\r\nexport const wifi_read = function (_, generator) {\r\n\r\n    return [`req`, generator.ORDER_ATOMIC];\r\n\r\n};\r\n\r\nexport const client_print = function () {\r\n\r\n    var data = this.getFieldValue('DATA');\r\n\r\n    var code = `client.println(\"${data}\");\\n`;\r\n\r\n    return code;\r\n\r\n};\r\nexport const dht_print = function () {\r\n    var dropdown_pin = this.getFieldValue('PIN');\r\n    var sata = this.getFieldValue('SATA');\r\n    var code = `client.println(${'dht' + dropdown_pin + sata});\\n`;\r\n    return code;\r\n};","export const EnMsg = {};\r\n\r\n\r\nEnMsg.ke_LED = 'led';\r\n\r\nEnMsg.MIXLY_ANALOGWRITE_PIN = 'AnalogWrite PIN#';\r\nEnMsg.MIXLY_CHANNEL = 'channel';\r\n\r\nEnMsg.MIXLY_VALUE2 = 'value';\r\n\r\n\r\nEnMsg.Kids_ON = 'HIGH';\r\nEnMsg.Kids_OFF = 'LOW';\r\nEnMsg.Kids_anologWrite = 'anologWrite';\r\n\r\nEnMsg.Kids_iic = 'PIN：SDA# A4, SCL# A5';\r\nEnMsg.Kids_rot = 'button_PIN';\r\nEnMsg.Kids_rot_count = 'count';\r\nEnMsg.Kids_bits = 'string';\r\nEnMsg.Kids_pin = 'PIN';\r\n\r\nEnMsg.Kids_iic_pin = 'PIN #SDA:A4,#SCL:A5';\r\nEnMsg.Kids_lcd_p = 'LCD';\r\nEnMsg.Kids_shilihua = 'Instantiation name';\r\nEnMsg.Kids_size = 'font size';\r\n\r\nEnMsg.Kids_printcount = 'Display digits';\r\nEnMsg.ke_string = 'display character';\r\n\r\nEnMsg.Kids_lcd_left = 'LCD_Scroll to the left';\r\nEnMsg.Kids_lcd_right = 'LCD_Scroll to the right';\r\n\r\nEnMsg.ke_TM1637='4 digit 8-segment LED digital';\r\nEnMsg.ke_ws='digit';\r\nEnMsg.ke_begin='Display position';\r\nEnMsg.ke_fill0='add 0?';\r\nEnMsg.ke_light='Brightness0~7';\r\nEnMsg.ke_XY='Show or hide';\r\nEnMsg.ke_L='left';\r\nEnMsg.ke_R='right';\r\nEnMsg.ke_MH='colon';\r\nEnMsg.ke_value='value';\r\n\r\n\r\nEnMsg.MIXLY_WIFI_INIT='WIFI ';\r\nEnMsg.MIXLY_WIFI_NAME='Name';\r\nEnMsg.MIXLY_WIFI_PASSWORD='password';\r\nEnMsg.MIXLY_WIFI_READ='WIFI read data';\r\nEnMsg.MIXLY_CLIENT_PRINT='WIFI print';\r\nEnMsg.MIXLY_DHT_PRINT='WIFI print DHT11 pin';\r\n\r\nEnMsg.ke_oled_init = 'OLED_init';\r\nEnMsg.ke_oled_piexl = 'OLED_point coordinates';\r\nEnMsg.ke_oled_x = 'column';\r\nEnMsg.ke_oled_y = 'row';\r\nEnMsg.ke_oled_cong = 'from';\r\nEnMsg.ke_oled_dao = 'to';\r\nEnMsg.ke_oled_kai = 'initial point';\r\nEnMsg.ke_oled_kuan = 'width';\r\nEnMsg.ke_oled_chang = 'height';\r\nEnMsg.ke_oled_angle1 = 'angle1';\r\nEnMsg.ke_oled_angle2 = 'angle2';\r\nEnMsg.ke_oled_angle3 = 'angle3';\r\n\r\nEnMsg.ke_oled_line = 'OLED_line';\r\nEnMsg.ke_oled_rect = 'OLED_hollow rectangle';\r\nEnMsg.ke_oled_fil_lrect = 'OLED_solid rectangle';\r\nEnMsg.ke_oled_r_rect = 'OLED_hollow rounded rectangle';\r\nEnMsg.ke_oled_r_fill_rect = 'OLED_solid rounded rectangle';\r\nEnMsg.ke_oled_circle = 'OLED_hollow circle  Center coordinates';\r\nEnMsg.ke_oled_circle_radius = 'Circle radius';\r\nEnMsg.ke_oled_radius = 'Corner radius';\r\nEnMsg.ke_oled_fill_circle = 'OLED_solid circle  Center coordinates';\r\nEnMsg.ke_oled_triangle = 'OLED_hollow triangle';\r\nEnMsg.ke_oled_fill_triangle = 'OLED_solid triangle';\r\nEnMsg.ke_oled_string1 = 'OLED_displays a string or number';\r\nEnMsg.ke_oled_weizhi = 'display position';\r\nEnMsg.ke_oled_print = 'display';\r\nEnMsg.ke_oled_clear = 'OLED_clear';\r\n\r\n\r\nEnMsg.MIXLY_ke_LED1='Piranha LED';\r\nEnMsg.MIXLY_ke_LED2='Red Piranha LED';\r\nEnMsg.MIXLY_ke_LED3='Green Piranha LED';\r\nEnMsg.MIXLY_ke_LED4='Yellow Piranha LED';\r\nEnMsg.MIXLY_ke_LED5='Blue Piranha LED';\r\nEnMsg.MIXLY_ke_LED01='Straw cap LED';\r\nEnMsg.MIXLY_ke_LED02='Red Straw cap LED';\r\nEnMsg.MIXLY_ke_LED03='Green Straw cap LED';\r\nEnMsg.MIXLY_ke_LED04='Yellow straw cap LED';\r\nEnMsg.MIXLY_ke_LED05='Blue Straw cap LED';\r\nEnMsg.MIXLY_ke_QCD='Colorful lights';\r\nEnMsg.MIXLY_ke_RGB_A='Common anode RGB';\r\nEnMsg.MIXLY_ke_RGB_B='Common cathode RGB';\r\n\r\nEnMsg.MIXLY_ke_BUZZER1='Active buzzer';\r\nEnMsg.MIXLY_ke_BUZZER2='Passive Buzzer';\r\nEnMsg.MIXLY_ke_RELAY='Relay';\r\nEnMsg.MIXLY_ke_v_motor='Vibration motor';\r\nEnMsg.MIXLY_ke_SPEAKER='Speaker';\r\nEnMsg.MIXLY_NOTONE_PIN = 'noTone PIN#';\r\nEnMsg.MIXLY_ke_MOTOR='Fan';\r\nEnMsg.MIXLY_MOTOR_ANALOG='analog value';\r\nEnMsg.MIXLY_ke_MOTOR01='geared motor';\r\nEnMsg.MIXLY_ke_SERVO='servo';\r\nEnMsg.MIXLY_ke_TB6612='TB6612motor';\r\nEnMsg.MIXLY_H='front';\r\nEnMsg.MIXLY_L='back';\r\n\r\n\r\n\r\nEnMsg.MIXLY_RGB_INIT = 'RGB Init';\r\nEnMsg.MIXLY_RGB_SET_BRIGHTNESS = 'RGB Brightness';\r\nEnMsg.MIXLY_RGB_SET_COLOR = 'RGB Color';\r\nEnMsg.MIXLY_RGB_SHOW = 'RGB show';\r\nEnMsg.MIXLY_RGB = 'RGB';\r\nEnMsg.MIXLY_CHASE = 'chase';\r\nEnMsg.MIXLY_RAINBOW = 'rainbow';\r\nEnMsg.MIXLY_RGB_NUM = 'NO';\r\nEnMsg.MIXLY_RGB_COUNT = 'COUNT';\r\nEnMsg.MIXLY_RGB_R = 'R';\r\nEnMsg.MIXLY_RGB_G = 'G';\r\nEnMsg.MIXLY_RGB_B = 'B';\r\nEnMsg.MIXLY_RGBdisplay_rgb_rainbow1 = 'conversion switch time';\r\nEnMsg.MIXLY_RGBdisplay_rgb_rainbow2 = 'cycle switch time';\r\nEnMsg.MIXLY_RGB_DISPLAY_RAINBOW_TYPE_1 = 'Normal';\r\nEnMsg.MIXLY_RGB_DISPLAY_RAINBOW_TYPE_2 = 'Gradient';\r\nEnMsg.MIXLY_RGB_display_rgb_rainbow3 = 'rainbow';\r\n\r\nEnMsg.MIXLY_ke_IR_G='PIR Sensor';\r\nEnMsg.MIXLY_ke_FLAME='Flame Sensor';\r\nEnMsg.MIXLY_ke_HALL='Hall Sensor';\r\nEnMsg.MIXLY_ke_CRASH='Crash Sensor';\r\nEnMsg.MIXLY_ke_BUTTON='Button';\r\nEnMsg.MIXLY_ke_sl_BUTTON='Self-locking button';\r\nEnMsg.MIXLY_ke_TUOCH='Capacitive Touch';\r\nEnMsg.MIXLY_ke_KNOCK='Knock Sensor';\r\nEnMsg.MIXLY_ke_TILT='Tilt Sensor';\r\nEnMsg.MIXLY_ke_SHAKE='Vibration Sensor';\r\nEnMsg.MIXLY_ke_REED_S='Reed Switch Sensor';\r\nEnMsg.MIXLY_ke_TRACK='Tracking Sensor';\r\nEnMsg.MIXLY_ke_AVOID='Obstacle Avoidance MSensor';\r\nEnMsg.MIXLY_ke_LIGHT_B='Light Interrupt Sensor';\r\nEnMsg.MIXLY_ke_ROT='Rotation';\r\n\r\n\r\nEnMsg.MIXLY_ke_ANALOG_T='Analog Temperature Sensor';\r\nEnMsg.MIXLY_ke_SOUND='Sound Sensor';\r\nEnMsg.MIXLY_ke_LIGHT='photocell Sensor';\r\nEnMsg.MIXLY_ke_UV='UV Sensor';\r\nEnMsg.MIXLY_ke_Piezo='Piezo Sensor';\r\nEnMsg.MIXLY_ke_WATER='Water Level Sensor';\r\nEnMsg.MIXLY_ke_SOIL='Soil Sensor';\r\nEnMsg.MIXLY_ke_POTENTIOMETER='rotational potentiometer';\r\nEnMsg.MIXLY_ke_LM35='LM35 Temperature Sensor';\r\nEnMsg.MIXLY_ke_SLIDE_POTENTIOMETER='slide potentiometer';\r\nEnMsg.MIXLY_ke_TEMT6000='TEMT6000 Ambient Light';\r\nEnMsg.MIXLY_ke_STEAM='water vapor sensor';\r\nEnMsg.MIXLY_ke_FILM_P='Thin-film Pressure Sensor';\r\nEnMsg.MIXLY_ke_JOYSTICK='Joystick Sensor';\r\nEnMsg.MIXLY_ke_JOYSTICK_btn='Joystick_button';\r\nEnMsg.MIXLY_ke_SMOKE_DATA='Smoke Sensor digital';\r\nEnMsg.MIXLY_ke_SMOKE_ANALOG='Smoke Sensor analog';\r\nEnMsg.MIXLY_ke_ALCOHOL='Alcohol Sensor';\r\nEnMsg.MIXLY_ke_Voltage='Voltage Sensor';\r\nEnMsg.MIXLY_ke_Current='Current Sensor';\r\n\r\n\r\nEnMsg.MIXLY_ke_18B20='18B20 Temperature Sensor';\r\nEnMsg.MIXLY_ke_18B20_R='Getting temperature';\r\nEnMsg.MIXLY_ke_DHT11='temperature and humidity Sensor';\r\nEnMsg.MIXLY_DHT11_H='getTemperature';    /////////////\r\nEnMsg.MIXLY_DHT11_T='getHumidity';     ////////////\r\nEnMsg.MIXLY_ke_BMP180='BMP180 altimeter Sensor';\r\nEnMsg.MIXLY_ke_BMP180_T='temperature';\r\nEnMsg.MIXLY_ke_BMP180_A='atmosphere';\r\nEnMsg.MIXLY_ke_BMP180_H='height above sea level ';\r\n\r\nEnMsg.MIXLY_ke_BMP280='BMP280 altimeter Sensor';\r\nEnMsg.MIXLY_ke_BMP280_T='temperature';\r\nEnMsg.MIXLY_ke_BMP280_A='atmosphere';\r\nEnMsg.MIXLY_ke_BMP280_H='height above sea level';\r\n\r\nEnMsg.MIXLY_ke_SR04='SR04 Ultrasound Module';\r\nEnMsg.MIXLY_ke_3231='DS3231 clock';\r\n\r\n//RTC-DS3231/DS1307\r\nEnMsg.MIXLY_ke_DS3231='DS3231';\r\nEnMsg.MIXLY_ke_DS1307='DS1307';\r\nEnMsg.MIXLY_ke_DS3231_GET_TIME='Get';\r\nEnMsg.MIXLY_ke_DS3231_SET_TIME='SetTime';\r\nEnMsg.MIXLY_ke_DS3231_SET_TIME2='Compiled date and time';\r\nEnMsg.MIXLY_ke_YEAR='Year';\r\nEnMsg.MIXLY_ke_MONTH='Month';\r\nEnMsg.MIXLY_ke_DAY='Day';\r\nEnMsg.MIXLY_ke_HOUR='Hour';\r\nEnMsg.MIXLY_ke_MINUTE='Minute';\r\nEnMsg.MIXLY_ke_SECOND='Second';\r\nEnMsg.MIXLY_ke_DAYOFWEEK='DayOfWeek';\r\n\r\nEnMsg.MIXLY_ke_ADXL345='Acceleration Sensor';\r\nEnMsg.MIXLY_ADXL345_X='X-axis acceleration'; ///\r\nEnMsg.MIXLY_ADXL345_Y='Y-axis acceleration'; ///\r\nEnMsg.MIXLY_ADXL345_Z='Z-axis acceleration'; ///\r\nEnMsg.MIXLY_ADXL345_XA='X-axis angle';  ///\r\nEnMsg.MIXLY_ADXL345_YA='Y-axis angle';  ///\r\nEnMsg.MLX90614_TYPE = 'Infrared temperature sensor';\r\nEnMsg.MLX90614_TARGET_OBJECT_TEMP = 'Target object temperature';\r\nEnMsg.MLX90614_AMBIENT_TEMP = 'Ambient temperature';\r\nEnMsg.TCS34725_Get_RGB='TCS347255 Sensor Get Color';\r\nEnMsg.ke_Gesture_APDS='Gesture sensor';\r\n\r\n\r\n\r\nEnMsg.MIXLY_DF_LCD = 'LCD';\r\nEnMsg.MIXLY_LCD_PRINT1 = 'print line1';\r\nEnMsg.MIXLY_LCD_PRINT2 = 'print line2';\r\nEnMsg.MIXLY_LCD_PRINT3 = 'print line3';\r\nEnMsg.MIXLY_LCD_PRINT4 = 'print line4';\r\nEnMsg.MIXLY_LCD_ROW = 'row';\r\nEnMsg.MIXLY_LCD_COLUMN = 'column';\r\nEnMsg.MIXLY_LCD_PRINT = 'print';\r\nEnMsg.MIXLY_LCD_SETCOLOR = 'setColor';\r\nEnMsg.MIXLY_LCD_STAT_CURSOR = 'Cursor';\r\nEnMsg.MIXLY_LCD_STAT_NOCURSOR = 'noCursor';\r\nEnMsg.MIXLY_LCD_STAT_BLINK = 'Blink';\r\nEnMsg.MIXLY_LCD_STAT_NOBLINK = 'noBlink';\r\nEnMsg.MIXLY_LCD_STAT_CLEAR = 'Clear';\r\nEnMsg.MIXLY_LCD_NOBACKLIGHT = 'NoBackLight';\r\nEnMsg.MIXLY_LCD_BACKLIGHT = 'BackLight';\r\nEnMsg.MIXLY_NUMBER = 'number';\r\nEnMsg.MIXLY_ke_MATRIX='8*8 dot matrix';\r\n\r\nEnMsg.MIXLY_LCD128_SETUP='128X32 LCD start';  ////////////////\r\nEnMsg.MIXLY_LCD128_CURSOR='128X32 LCD set cursor';\r\nEnMsg.MIXLY_DISPLAY_STRING='128X32 LCD display String';\r\nEnMsg.MIXLY_ke_LCD128_PIXLE='128X32 LCD draw pixel';\r\nEnMsg.MIXLY_ke_LCD128_D='128X32 LCD delete pixel';\r\nEnMsg.MIXLY_LCD128_CLEAR='128X32 LCD Clear';\r\n\r\n\r\n\r\nEnMsg.MIXLY_ke_TM1637='4 digit 8-segment LED digital';\r\nEnMsg.MIXLY_ke_TM1637_C='digit';\r\nEnMsg.MIXLY_ke_TM1637_P='display position';\r\nEnMsg.MIXLY_ke_TM1637_Fill='add 0?';\r\nEnMsg.MIXLY_ke_TM1637_light='brightness 0~7';\r\nEnMsg.MIXLY_ke_TM1637_xy='show or hide';\r\nEnMsg.MIXLY_ke_TM1637_left='left';\r\nEnMsg.MIXLY_ke_TM1637_maohao='colon';\r\nEnMsg.MIXLY_ke_TM1637_right='right';\r\nEnMsg.MIXLY_ke_value='value';\r\n\r\n//4 Display\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY='DigitDisplay';\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY_DISPLAYSTRING='displayString';\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY_DISPLAYNUMBER='displayNumber';\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY_NOMBER1='No.';\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY_NOMBER2='';\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY_DOT='Dot';\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY_BRIGHTNESS='Brightness';\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY_BRIGHTNESS_RANGE='(1~8)';\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY_TIME_HOUR='Hour';\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY_TIME_MINUTE='Minute';\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY_TIME_SECOND='Second';\r\n//4 Display time\r\nEnMsg.MIXLY_ke_TIME_SEC_ON ='on';\r\nEnMsg.MIXLY_ke_TIME_SEC_BLINK ='blink';\r\nEnMsg.MIXLY_ke_TIME_SEC_OFF='off';\r\n\r\n\r\nEnMsg.MIXLY_ke_IR_E='Infrared Transmitter Module';\r\nEnMsg.MIXLY_ke_IR_R='Infrared Receiver Module';\r\nEnMsg.MIXLY_ke_W5100='W5100 Ethernet Module';\r\nEnMsg.MIXLY_rc522_iic_init='RFID RC522_I2C Init';\r\nEnMsg.MIXLY_rc522_iic_read='RFID RC522_I2C Read';\r\nEnMsg.MIXLY_ke_BLUETOOTH='Bluetooth';\r\nEnMsg.MIXLY_ke_read='Received signal';\r\n\r\n\r\n//EnMsg.MIXLY_ke_kzsc = 'Control output';\r\n\r\nEnMsg.MIXLY_ke_Count='count';\r\n\r\nEnMsg.MIXLY_ke_YEAR = 'year';\r\nEnMsg.MIXLY_ke_MONTH = 'month';\r\nEnMsg.MIXLY_ke_DAY = 'day';\r\nEnMsg.MIXLY_ke_HOUR = 'hour';\r\nEnMsg.MIXLY_ke_MINUTE = 'minute';\r\nEnMsg.MIXLY_ke_SECOND = 'second';\r\nEnMsg.MIXLY_ke_WEEK = 'week';\r\n\r\nEnMsg.MIXLY_ke_angle = 'angle';\r\n\r\nEnMsg.kids_Ode_to_joy = \"Ode_to_joy\";\r\nEnMsg.kids_birthday = \"birthday\";\r\n\r\nEnMsg.kids_tone = \"tone\";\r\nEnMsg.kids_beat = \"beat\";\r\nEnMsg.kids_play_tone = \"play_tone\";\r\nEnMsg.kids_notone = \"no_tone\";\r\n\r\nEnMsg.kids_ADkey = \"5 key module\";\r\n\r\nexport const EnCatgories = {};","export const ZhHansMsg = {};\r\n\r\nZhHansMsg.ke_LED = 'LED灯';\r\nZhHansMsg.MIXLY_ANALOGWRITE_PIN = '模拟输出 管脚 #';\r\nZhHansMsg.MIXLY_CHANNEL = '通道';\r\n\r\nZhHansMsg.MIXLY_VALUE2 = '赋值为';\r\nZhHansMsg.Kids_iic = '管脚：SDA# A4, SCL# A5';\r\nZhHansMsg.Kids_rot = '按钮管脚';\r\nZhHansMsg.Kids_rot_count = '计数变量';\r\nZhHansMsg.Kids_bits = '字符串';\r\nZhHansMsg.Kids_pin = '管脚';\r\n\r\nZhHansMsg.Kids_iic_pin = '管脚SDA:A4,SCL:A5';\r\nZhHansMsg.Kids_lcd_p = '液晶显示屏';\r\nZhHansMsg.Kids_shilihua = '实例化名称';\r\nZhHansMsg.Kids_size = '字体大小';\r\nZhHansMsg.Kids_printcount = '显示数字';\r\n\r\nZhHansMsg.ke_string = '显示字符';\r\n\r\nZhHansMsg.Kids_lcd_left = '液晶显示屏往左滚动';\r\nZhHansMsg.Kids_lcd_right = '液晶显示屏往右滚动';\r\n\r\nZhHansMsg.ke_TM1637 = '4位8段数码管';\r\nZhHansMsg.ke_ws = '位数';\r\nZhHansMsg.ke_begin = '显示的位置';\r\nZhHansMsg.ke_fill0 = '是否补充0';\r\nZhHansMsg.ke_light = '亮度0~7';\r\nZhHansMsg.ke_XY = '显或隐';\r\nZhHansMsg.ke_L = '左边';\r\nZhHansMsg.ke_R = '右边';\r\nZhHansMsg.ke_MH = '冒号';\r\nZhHansMsg.ke_value = '数值';\r\n\r\nZhHansMsg.MIXLY_WIFI_INIT = 'WIFI 初始化';\r\nZhHansMsg.MIXLY_WIFI_NAME = '名称';\r\nZhHansMsg.MIXLY_WIFI_PASSWORD = '密码';\r\nZhHansMsg.MIXLY_WIFI_READ = 'WIFI 读取数据';\r\n\r\nZhHansMsg.MIXLY_CLIENT_PRINT = 'WIFI 打印';\r\nZhHansMsg.MIXLY_DHT_PRINT = 'WIFI打印 温湿度脚位';\r\nZhHansMsg.ke_oled_init = 'OLED初始化';\r\nZhHansMsg.ke_oled_piexl = 'OLED_画点的坐标';\r\nZhHansMsg.ke_oled_x = '列';\r\nZhHansMsg.ke_oled_y = '行';\r\nZhHansMsg.ke_oled_cong = '从';\r\nZhHansMsg.ke_oled_dao = '到';\r\nZhHansMsg.ke_oled_kai = '起始位';\r\nZhHansMsg.ke_oled_kuan = '宽';\r\nZhHansMsg.ke_oled_chang = '长';\r\nZhHansMsg.ke_oled_angle1 = '角度1为';\r\nZhHansMsg.ke_oled_angle2 = '角度2为';\r\nZhHansMsg.ke_oled_angle3 = '角度3为';\r\n\r\nZhHansMsg.ke_oled_line = 'OLED_画两点连线';\r\nZhHansMsg.ke_oled_rect = 'OLED_画空心矩形';\r\nZhHansMsg.ke_oled_fil_lrect = 'OLED_画实心矩形';\r\nZhHansMsg.ke_oled_r_rect = 'OLED_画倒圆角的空心矩形';\r\nZhHansMsg.ke_oled_r_fill_rect = 'OLED_画倒圆角的实心矩形';\r\nZhHansMsg.ke_oled_circle = 'OLED_画空心圆形  圆心坐标';\r\nZhHansMsg.ke_oled_circle_radius = '圆半径';\r\nZhHansMsg.ke_oled_radius = '圆角半径';\r\nZhHansMsg.ke_oled_fill_circle = 'OLED_画实心的圆形  圆心坐标';\r\nZhHansMsg.ke_oled_triangle = 'OLED_画空心三角形';\r\nZhHansMsg.ke_oled_fill_triangle = 'OLED_画实心三角形';\r\nZhHansMsg.ke_oled_string1 = 'OLED_显示字符串或数字';\r\nZhHansMsg.ke_oled_weizhi = '显示的位置';\r\nZhHansMsg.ke_oled_print = '显示';\r\nZhHansMsg.ke_oled_clear = 'OLED_清屏';\r\n\r\n\r\n\r\n\r\nZhHansMsg.Kids_ON = '高';\r\nZhHansMsg.Kids_OFF = '低';\r\nZhHansMsg.Kids_anologWrite = 'PWM输出';\r\n\r\n\r\n\r\nZhHansMsg.MIXLY_ke_BUZZER1 = '有源蜂鸣器';\r\nZhHansMsg.MIXLY_ke_BUZZER2 = '无源蜂鸣器';\r\nZhHansMsg.MIXLY_ke_RELAY = '继电器';\r\nZhHansMsg.MIXLY_ke_v_motor = '震动马达';\r\nZhHansMsg.MIXLY_ke_SPEAKER = '扬声器';\r\nZhHansMsg.MIXLY_NOTONE_PIN = '结束声音 管脚#';\r\nZhHansMsg.MIXLY_ke_MOTOR = '小风扇';\r\nZhHansMsg.MIXLY_MOTOR_ANALOG = '模拟输出值';\r\n\r\nZhHansMsg.MIXLY_ke_MOTOR01 = '减速电机';\r\nZhHansMsg.MIXLY_ke_SERVO = '舵机';\r\nZhHansMsg.MIXLY_ke_TB6612 = 'TB6612电机驱动';\r\nZhHansMsg.MIXLY_H = '正';\r\nZhHansMsg.MIXLY_L = '反';\r\n\r\n\r\nZhHansMsg.MIXLY_RGB_INIT = 'RGB灯初始化';\r\nZhHansMsg.MIXLY_RGB_SET_BRIGHTNESS = 'RGB灯设置亮度';\r\nZhHansMsg.MIXLY_RGB_SET_COLOR = 'RGB灯设置颜色';\r\nZhHansMsg.MIXLY_RGB_SHOW = 'RGB灯设置生效';\r\nZhHansMsg.MIXLY_RGB = 'RGB灯';\r\nZhHansMsg.MIXLY_CHASE = '跑马灯';\r\nZhHansMsg.MIXLY_RAINBOW = '彩虹';\r\nZhHansMsg.MIXLY_RGB_NUM = '灯号';\r\nZhHansMsg.MIXLY_RGB_COUNT = '灯数';\r\nZhHansMsg.MIXLY_RGB_R = 'R值';\r\nZhHansMsg.MIXLY_RGB_G = 'G值';\r\nZhHansMsg.MIXLY_RGB_B = 'B值';\r\nZhHansMsg.MIXLY_RGBdisplay_rgb_rainbow1 = '七彩变换切换时间';\r\nZhHansMsg.MIXLY_RGBdisplay_rgb_rainbow2 = '七彩循环切换时间';\r\nZhHansMsg.MIXLY_RGB_DISPLAY_RAINBOW_TYPE_1 = '普通';\r\nZhHansMsg.MIXLY_RGB_DISPLAY_RAINBOW_TYPE_2 = '渐变';\r\nZhHansMsg.MIXLY_RGB_display_rgb_rainbow3 = '彩虹值';\r\n\r\nZhHansMsg.MIXLY_ke_IR_G = '人体红外热传感器';\r\nZhHansMsg.MIXLY_ke_FLAME = '火焰传感器';\r\nZhHansMsg.MIXLY_ke_HALL = '霍尔传感器';\r\nZhHansMsg.MIXLY_ke_CRASH = '碰撞传感器';\r\nZhHansMsg.MIXLY_ke_BUTTON = '按键';\r\nZhHansMsg.MIXLY_ke_sl_BUTTON = '自锁按键';\r\nZhHansMsg.MIXLY_ke_TUOCH = '触摸传感器';\r\nZhHansMsg.MIXLY_ke_KNOCK = '敲击传感器';\r\nZhHansMsg.MIXLY_ke_TILT = '倾斜传感器';\r\nZhHansMsg.MIXLY_ke_SHAKE = '震动传感器';\r\nZhHansMsg.MIXLY_ke_REED_S = '干簧管传感器';\r\nZhHansMsg.MIXLY_ke_TRACK = '循迹传感器';\r\nZhHansMsg.MIXLY_ke_AVOID = '避障传感器';\r\nZhHansMsg.MIXLY_ke_LIGHT_B = '光折断传感器';\r\nZhHansMsg.MIXLY_ke_ROT = '旋转编码器';\r\n\r\nZhHansMsg.MIXLY_ke_ANALOG_T = '模拟温度传感器';\r\nZhHansMsg.MIXLY_ke_SOUND = '声音传感器';\r\nZhHansMsg.MIXLY_ke_LIGHT = '光敏传感器';\r\nZhHansMsg.MIXLY_ke_UV = '紫外线传感器';\r\nZhHansMsg.MIXLY_ke_Piezo = '陶瓷压电传感器';\r\nZhHansMsg.MIXLY_ke_WATER = '水位传感器';\r\nZhHansMsg.MIXLY_ke_SOIL = '土壤传感器';\r\nZhHansMsg.MIXLY_ke_POTENTIOMETER = '旋转电位器';\r\nZhHansMsg.MIXLY_ke_LM35 = 'LM35温度传感器';\r\nZhHansMsg.MIXLY_ke_SLIDE_POTENTIOMETER = '滑动电位器';\r\nZhHansMsg.MIXLY_ke_TEMT6000 = 'TEMT6000环境光';\r\nZhHansMsg.MIXLY_ke_STEAM = '水蒸气传感器';\r\nZhHansMsg.MIXLY_ke_FILM_P = '薄膜压力传感器';\r\nZhHansMsg.MIXLY_ke_JOYSTICK = '遥杆传感器';\r\nZhHansMsg.MIXLY_ke_JOYSTICK_btn = '遥杆按钮';\r\nZhHansMsg.MIXLY_ke_SMOKE_DATA = '烟雾传感器 数字';\r\nZhHansMsg.MIXLY_ke_SMOKE_ANALOG = '烟雾传感器 模拟';\r\nZhHansMsg.MIXLY_ke_ALCOHOL = '酒精传感器';\r\nZhHansMsg.MIXLY_ke_Voltage = '电压传感器';\r\nZhHansMsg.MIXLY_ke_Current = '电流传感器';\r\n\r\n\r\nZhHansMsg.MIXLY_ke_18B20 = '18B20温度传感器';\r\nZhHansMsg.MIXLY_ke_18B20_R = '获取温度';\r\nZhHansMsg.MIXLY_ke_DHT11 = '温湿度传感器';\r\nZhHansMsg.MIXLY_DHT11_H = '获取湿度';    /////////////\r\nZhHansMsg.MIXLY_DHT11_T = '获取温度';     ////////////\r\nZhHansMsg.MIXLY_ke_BMP180 = 'BMP180高度计传感器';\r\n\r\nZhHansMsg.MIXLY_ke_BMP180_T = '温度';\r\nZhHansMsg.MIXLY_ke_BMP180_A = '大气压';\r\nZhHansMsg.MIXLY_ke_BMP180_H = '海拔高度';\r\n\r\nZhHansMsg.MIXLY_ke_BMP280 = 'BMP280高度计传感器';\r\nZhHansMsg.MIXLY_ke_BMP280_T = '温度';\r\nZhHansMsg.MIXLY_ke_BMP280_A = '大气压';\r\nZhHansMsg.MIXLY_ke_BMP280_H = '海拔高度';\r\n\r\nZhHansMsg.MIXLY_ke_SR04 = 'SR04超声波模块';\r\nZhHansMsg.MIXLY_ke_3231 = 'DS3231时钟';\r\n\r\n//RTC-DS3231/DS1307\r\nZhHansMsg.MIXLY_ke_DS3231 = 'DS3231';\r\nZhHansMsg.MIXLY_ke_DS1307 = 'DS1307';\r\nZhHansMsg.MIXLY_ke_DS3231_GET_TIME = '获取';\r\nZhHansMsg.MIXLY_ke_DS3231_SET_TIME = '设置时间';\r\nZhHansMsg.MIXLY_ke_DS3231_SET_TIME2 = '编译的日期和时间';\r\nZhHansMsg.MIXLY_ke_YEAR = '年';\r\nZhHansMsg.MIXLY_ke_MONTH = '月';\r\nZhHansMsg.MIXLY_ke_DAY = '日';\r\nZhHansMsg.MIXLY_ke_HOUR = '时';\r\nZhHansMsg.MIXLY_ke_MINUTE = '分';\r\nZhHansMsg.MIXLY_ke_SECOND = '秒';\r\nZhHansMsg.MIXLY_ke_DAYOFWEEK = '星期';\r\n\r\nZhHansMsg.MIXLY_Ke_ADXL345 = '加速度传感器';\r\nZhHansMsg.MIXLY_ADXL345_X = 'X轴加速度'; ///\r\nZhHansMsg.MIXLY_ADXL345_Y = 'Y轴加速度'; ///\r\nZhHansMsg.MIXLY_ADXL345_Z = 'Z轴加速度'; ///\r\nZhHansMsg.MIXLY_ADXL345_XA = 'X轴角度';  ///\r\nZhHansMsg.MIXLY_ADXL345_YA = 'Y轴角度';  ///\r\n\r\nZhHansMsg.MLX90614_TYPE = '红外测温传感器';\r\nZhHansMsg.MLX90614_TARGET_OBJECT_TEMP = '目标物体温度';\r\nZhHansMsg.MLX90614_AMBIENT_TEMP = '周围环境温度';\r\nZhHansMsg.TCS34725_Get_RGB = 'TCS34725颜色传感器 获取颜色';\r\nZhHansMsg.ke_Gesture_APDS = '手势传感器获取手势';\r\n\r\n\r\nZhHansMsg.MIXLY_ke_YEAR = '年';\r\nZhHansMsg.MIXLY_ke_MONTH = '月';\r\nZhHansMsg.MIXLY_ke_DAY = '天';\r\nZhHansMsg.MIXLY_ke_TEXT = '周';\r\nZhHansMsg.MIXLY_ke_HOUR = '时';\r\nZhHansMsg.MIXLY_ke_MINUTE = '分';\r\nZhHansMsg.MIXLY_ke_SECOND = '秒';\r\nZhHansMsg.MIXLY_ke_GET = '获取时间';\r\n\r\n\r\nZhHansMsg.MIXLY_DF_LCD = '液晶显示屏';\r\nZhHansMsg.MIXLY_LCD_PRINT1 = '打印第1行';\r\nZhHansMsg.MIXLY_LCD_PRINT2 = '打印第2行';\r\nZhHansMsg.MIXLY_LCD_PRINT3 = '打印第3行';\r\nZhHansMsg.MIXLY_LCD_PRINT4 = '打印第4行';\r\nZhHansMsg.MIXLY_LCD_ROW = '在第';\r\nZhHansMsg.MIXLY_LCD_COLUMN = '行第';\r\nZhHansMsg.MIXLY_LCD_PRINT = '列打印';\r\nZhHansMsg.MIXLY_LCD_SETCOLOR = '设置颜色';\r\nZhHansMsg.MIXLY_LCD_STAT_CURSOR = '有光标';\r\nZhHansMsg.MIXLY_LCD_STAT_NOCURSOR = '无光标';\r\nZhHansMsg.MIXLY_LCD_STAT_BLINK = '闪烁';\r\nZhHansMsg.MIXLY_LCD_STAT_NOBLINK = '不闪烁';\r\nZhHansMsg.MIXLY_LCD_STAT_CLEAR = '清屏';\r\nZhHansMsg.MIXLY_LCD_NOBACKLIGHT = '关闭背光';\r\nZhHansMsg.MIXLY_LCD_BACKLIGHT = '打开背光';\r\nZhHansMsg.MIXLY_NUMBER = '数字';\r\n\r\nZhHansMsg.MIXLY_LCD128_SETUP = '128X32 LCD 初始化';  ////////////////\r\nZhHansMsg.MIXLY_LCD128_CURSOR = '128X32 LCD 设置位置';\r\nZhHansMsg.MIXLY_DISPLAY_STRING = '128X32 LCD 显示字符';\r\nZhHansMsg.MIXLY_ke_LCD128_PIXLE = '128X32 LCD 画点坐标';\r\nZhHansMsg.MIXLY_ke_LCD128_D = '128X32 LCD 删除点坐标';\r\nZhHansMsg.MIXLY_LCD128_CLEAR = '128X32 LCD 清屏';\r\n\r\n\r\nZhHansMsg.MIXLY_ke_2004LCD = 'IIC2004LCD';\r\nZhHansMsg.MIXLY_ke_print1 = '打印第一行';\r\nZhHansMsg.MIXLY_ke_print2 = '打印第二行';\r\nZhHansMsg.MIXLY_ke_print3 = '打印第三行';\r\nZhHansMsg.MIXLY_ke_print4 = '打印第四行';\r\n\r\n\r\nZhHansMsg.MIXLY_ke_MATRIX = '8*8点阵';\r\nZhHansMsg.MIXLY_ke_TM1637 = '4位8段数码管';\r\nZhHansMsg.MIXLY_ke_TM1637_C = '位数';\r\nZhHansMsg.MIXLY_ke_TM1637_P = '在第几位开始显示';\r\nZhHansMsg.MIXLY_ke_TM1637_Fill = '是否填充0';\r\nZhHansMsg.MIXLY_ke_TM1637_light = '亮度0~7';\r\nZhHansMsg.MIXLY_ke_TM1637_xy = '显或隐';\r\nZhHansMsg.MIXLY_ke_TM1637_left = '左边';\r\nZhHansMsg.MIXLY_ke_TM1637_maohao = '冒号';\r\nZhHansMsg.MIXLY_ke_TM1637_right = '右边';\r\nZhHansMsg.MIXLY_ke_value = '数值';\r\n\r\n//4 Display\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY = '四位数码管';\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY_DISPLAYSTRING = '显示字符串';\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY_DISPLAYNUMBER = '显示数字';\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY_NOMBER1 = '第';\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY_NOMBER2 = '个';\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY_DOT = '小数点';\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY_BRIGHTNESS = '亮度';\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY_BRIGHTNESS_RANGE = '(1~8)';\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY_TIME_HOUR = '时';\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY_TIME_MINUTE = '分';\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY_TIME_SECOND = '秒';\r\n//4 Display time\r\nZhHansMsg.MIXLY_ke_TIME_SEC_ON = '亮';\r\nZhHansMsg.MIXLY_ke_TIME_SEC_BLINK = '闪';\r\nZhHansMsg.MIXLY_ke_TIME_SEC_OFF = '灭';\r\n\r\nZhHansMsg.MIXLY_ke_IR_E = '红外发射模块';\r\nZhHansMsg.MIXLY_ke_IR_R = '红外接收模块';\r\nZhHansMsg.MIXLY_ke_W5100 = 'W5100以太网模块';\r\nZhHansMsg.MIXLY_rc522_iic_init = 'RFID RC522_I2C 初始化';\r\nZhHansMsg.MIXLY_rc522_iic_read = 'RFID RC522_I2C 读取值';\r\nZhHansMsg.MIXLY_ke_BLUETOOTH = '蓝牙';\r\nZhHansMsg.MIXLY_ke_read = '接收到信号';\r\n\r\n\r\n//ZhHansMsg.MIXLY_ke_kzsc = '控制输出';\r\n\r\nZhHansMsg.MIXLY_ke_Count = '灯号';\r\n\r\nZhHansMsg.MIXLY_ke_YEAR = '年';\r\nZhHansMsg.MIXLY_ke_MONTH = '月';\r\nZhHansMsg.MIXLY_ke_DAY = '日';\r\nZhHansMsg.MIXLY_ke_HOUR = '时';\r\nZhHansMsg.MIXLY_ke_MINUTE = '分';\r\nZhHansMsg.MIXLY_ke_SECOND = '秒';\r\nZhHansMsg.MIXLY_ke_WEEK = '周';\r\n\r\nZhHansMsg.MIXLY_ke_angle = '角度';\r\n\r\nZhHansMsg.kids_Ode_to_joy = \"圣诞歌\";\r\nZhHansMsg.kids_birthday = \"生日快乐\";\r\n\r\nZhHansMsg.kids_tone = \"音调\";\r\nZhHansMsg.kids_beat = \"节拍\";\r\nZhHansMsg.kids_play_tone = \"播放乐曲\";\r\nZhHansMsg.kids_notone = \"关闭蜂鸣器\";\r\n\r\nZhHansMsg.kids_ADkey = \"5位按键模块\";\r\n\r\nexport const ZhHansCatgories = {};","export const ZhHantMsg = {};\r\n\r\nZhHantMsg.ke_LED = 'LED灯';\r\nZhHantMsg.MIXLY_ANALOGWRITE_PIN = '類比輸出裝置  @腳位';\r\nZhHantMsg.MIXLY_CHANNEL = '通道';\r\nZhHantMsg.MIXLY_VALUE2 = '賦值為';\r\nZhHantMsg.Kids_ON = '高';\r\nZhHantMsg.Kids_OFF = '低';\r\nZhHantMsg.Kids_anologWrite = 'PWM模拟输出';\r\n\r\nZhHantMsg.Kids_iic = '管脚：SDA# A4, SCL# A5';\r\nZhHantMsg.Kids_rot = '按钮管脚';\r\nZhHantMsg.Kids_rot_count = '计数变量';\r\n\r\nZhHantMsg.Kids_bits = '字符串';\r\nZhHantMsg.Kids_pin = '管脚';\r\n\r\nZhHantMsg.Kids_iic_pin = '管脚SDA:A4,SCL:A5';\r\nZhHantMsg.Kids_lcd_p = '液晶显示屏';\r\nZhHantMsg.Kids_shilihua = '实例化名称';\r\nZhHantMsg.Kids_size = '字体大小';\r\nZhHantMsg.Kids_printcount = '显示数字';\r\nZhHantMsg.ke_string = '显示字符';\r\n\r\nZhHantMsg.Kids_lcd_left = '液晶显示屏往左滚动';\r\nZhHantMsg.Kids_lcd_right = '液晶显示屏往右滚动';\r\n\r\nZhHantMsg.ke_TM1637 = '4位8段数码管';\r\nZhHantMsg.ke_ws = '位数';\r\nZhHantMsg.ke_begin = '显示的位置';\r\nZhHantMsg.ke_fill0 = '是否补充0';\r\nZhHantMsg.ke_light = '亮度0~7';\r\nZhHantMsg.ke_XY = '显或隐';\r\nZhHantMsg.ke_L = '左边';\r\nZhHantMsg.ke_R = '右边';\r\nZhHantMsg.ke_MH = '冒号';\r\nZhHantMsg.ke_value = '数值';\r\n\r\nZhHantMsg.MIXLY_WIFI_INIT = 'WIFI 初始化';\r\nZhHantMsg.MIXLY_WIFI_NAME = '名称';\r\nZhHantMsg.MIXLY_WIFI_PASSWORD = '密码';\r\nZhHantMsg.MIXLY_WIFI_READ = 'WIFI 读取数据';\r\nZhHantMsg.MIXLY_CLIENT_PRINT = 'WIFI 打印';\r\nZhHantMsg.MIXLY_DHT_PRINT = 'WIFI打印 温湿度脚位';\r\n\r\nZhHantMsg.ke_oled_init = 'OLED初始化';\r\nZhHantMsg.ke_oled_piexl = 'OLED_画点的坐标';\r\nZhHantMsg.ke_oled_x = '列';\r\nZhHantMsg.ke_oled_y = '行';\r\nZhHantMsg.ke_oled_cong = '从';\r\nZhHantMsg.ke_oled_dao = '到';\r\nZhHantMsg.ke_oled_kai = '起始位';\r\nZhHantMsg.ke_oled_kuan = '宽';\r\nZhHantMsg.ke_oled_chang = '长';\r\nZhHantMsg.ke_oled_angle1 = '角度1为';\r\nZhHantMsg.ke_oled_angle2 = '角度2为';\r\nZhHantMsg.ke_oled_angle3 = '角度3为';\r\n\r\nZhHantMsg.ke_oled_line = 'OLED_画两点连线';\r\nZhHantMsg.ke_oled_rect = 'OLED_画空心矩形';\r\nZhHantMsg.ke_oled_fil_lrect = 'OLED_画实心矩形';\r\nZhHantMsg.ke_oled_r_rect = 'OLED_画倒圆角的空心矩形';\r\nZhHantMsg.ke_oled_r_fill_rect = 'OLED_画倒圆角的实心矩形';\r\nZhHantMsg.ke_oled_circle = 'OLED_画空心圆形  圆心坐标';\r\nZhHantMsg.ke_oled_circle_radius = '圆半径';\r\nZhHantMsg.ke_oled_radius = '圆角半径';\r\nZhHantMsg.ke_oled_fill_circle = 'OLED_画实心的圆形  圆心坐标';\r\nZhHantMsg.ke_oled_triangle = 'OLED_画空心三角形';\r\nZhHantMsg.ke_oled_fill_triangle = 'OLED_画实心三角形';\r\nZhHantMsg.ke_oled_string1 = 'OLED_显示字符串或数字';\r\nZhHantMsg.ke_oled_weizhi = '显示的位置';\r\nZhHantMsg.ke_oled_print = '显示';\r\nZhHantMsg.ke_oled_clear = 'OLED_清屏';\r\n\r\n\r\nZhHantMsg.MIXLY_ke_LED1 = '食人魚LED';\r\nZhHantMsg.MIXLY_ke_LED2 = '紅色食人魚LED';\r\nZhHantMsg.MIXLY_ke_LED3 = '綠色食人魚LED';\r\nZhHantMsg.MIXLY_ke_LED4 = '黃色食人魚LED';\r\nZhHantMsg.MIXLY_ke_LED5 = '藍色食人魚LED';\r\nZhHantMsg.MIXLY_ke_LED01 = '草帽LED';\r\nZhHantMsg.MIXLY_ke_LED02 = '紅色草帽LED';\r\nZhHantMsg.MIXLY_ke_LED03 = '綠色草帽LED';\r\nZhHantMsg.MIXLY_ke_LED04 = '黃色草帽LED';\r\nZhHantMsg.MIXLY_ke_LED05 = '藍色草帽LED';\r\nZhHantMsg.MIXLY_ke_QCD = '七彩led灯';\r\nZhHantMsg.MIXLY_ke_RGB_A = '共阳RGB';\r\nZhHantMsg.MIXLY_ke_RGB_B = '共阴RGB';\r\n\r\nZhHantMsg.MIXLY_ke_BUZZER1 = '有源蜂鳴器';\r\nZhHantMsg.MIXLY_ke_BUZZER2 = '無源蜂鳴器';\r\nZhHantMsg.MIXLY_ke_RELAY = '繼電器';\r\nZhHantMsg.MIXLY_ke_v_motor = '震动马达';\r\nZhHantMsg.MIXLY_ke_SPEAKER = '扬声器';\r\nZhHantMsg.MIXLY_NOTONE_PIN = '结束声音 管脚#';\r\nZhHantMsg.MIXLY_ke_MOTOR = '风扇';\r\nZhHantMsg.MIXLY_MOTOR_ANALOG = '模拟输出值';\r\nZhHantMsg.MIXLY_ke_MOTOR01 = '减速电机';\r\nZhHantMsg.MIXLY_ke_SERVO = '舵機';\r\nZhHantMsg.MIXLY_ke_TB6612 = 'TB6612电机驱动';\r\nZhHantMsg.MIXLY_H = '正';\r\nZhHantMsg.MIXLY_L = '反';\r\n\r\n\r\nZhHantMsg.MIXLY_RGB_INIT = 'RGB燈初始化';\r\nZhHantMsg.MIXLY_RGB_SET_BRIGHTNESS = 'RGB燈設置亮度';\r\nZhHantMsg.MIXLY_RGB_SET_COLOR = 'RGB燈設置顏色';\r\nZhHantMsg.MIXLY_RGB_SHOW = 'RGB燈設置生效';\r\nZhHantMsg.MIXLY_RGB = 'RGB燈';\r\nZhHantMsg.MIXLY_CHASE = '跑馬燈';\r\nZhHantMsg.MIXLY_RAINBOW = '彩虹';\r\nZhHantMsg.MIXLY_RGB_NUM = '燈號';\r\nZhHantMsg.MIXLY_RGB_COUNT = '燈數';\r\nZhHantMsg.MIXLY_RGB_R = 'R值';\r\nZhHantMsg.MIXLY_RGB_G = 'G值';\r\nZhHantMsg.MIXLY_RGB_B = 'B值';\r\nZhHantMsg.MIXLY_RGBdisplay_rgb_rainbow1 = '七彩變換切換時間';\r\nZhHantMsg.MIXLY_RGBdisplay_rgb_rainbow2 = '七彩迴圈切換時間';\r\nZhHantMsg.MIXLY_RGB_DISPLAY_RAINBOW_TYPE_1 = '普通';\r\nZhHantMsg.MIXLY_RGB_DISPLAY_RAINBOW_TYPE_2 = '漸變';\r\nZhHantMsg.MIXLY_RGB_display_rgb_rainbow3 = '彩虹值';\r\n\r\nZhHantMsg.MIXLY_ke_IR_G = '人體紅外熱傳感器';\r\nZhHantMsg.MIXLY_ke_FLAME = '火焰傳感器';\r\nZhHantMsg.MIXLY_ke_HALL = '霍爾傳感器';\r\nZhHantMsg.MIXLY_ke_CRASH = '碰撞傳感器';\r\nZhHantMsg.MIXLY_ke_BUTTON = '按鍵';\r\nZhHantMsg.MIXLY_ke_sl_BUTTON = '自锁按键';\r\nZhHantMsg.MIXLY_ke_TUOCH = '電容觸摸傳感器';\r\nZhHantMsg.MIXLY_ke_KNOCK = '敲擊傳感器';\r\nZhHantMsg.MIXLY_ke_TILT = '傾斜傳感器';\r\nZhHantMsg.MIXLY_ke_SHAKE = '振動傳感器';\r\nZhHantMsg.MIXLY_ke_REED_S = '幹簧管傳感器';\r\nZhHantMsg.MIXLY_ke_TRACK = '循跡傳感器';\r\nZhHantMsg.MIXLY_ke_AVOID = '避障傳感器';\r\nZhHantMsg.MIXLY_ke_LIGHT_B = '光折斷傳感器';\r\nZhHantMsg.MIXLY_ke_ROT = '旋转编码器';\r\n\r\nZhHantMsg.MIXLY_ke_ANALOG_T = '模擬溫度傳感器';\r\nZhHantMsg.MIXLY_ke_SOUND = '聲音傳感器';\r\nZhHantMsg.MIXLY_ke_LIGHT = '光敏傳感器';\r\nZhHantMsg.MIXLY_ke_UV = '紫外线传感器';\r\nZhHantMsg.MIXLY_ke_Piezo = '陶瓷压电传感器';\r\nZhHantMsg.MIXLY_ke_WATER = '水位傳感器';\r\nZhHantMsg.MIXLY_ke_SOIL = '土壤傳感器';\r\nZhHantMsg.MIXLY_ke_POTENTIOMETER = '旋转電位器';\r\nZhHantMsg.MIXLY_ke_LM35 = 'LM35溫度傳感器';\r\nZhHantMsg.MIXLY_ke_SLIDE_POTENTIOMETER = '滑動電位器';\r\nZhHantMsg.MIXLY_ke_TEMT6000 = 'TEMT6000環境光傳感器';\r\nZhHantMsg.MIXLY_ke_STEAM = '水蒸氣傳感器';\r\nZhHantMsg.MIXLY_ke_FILM_P = '薄膜壓力傳感器';\r\nZhHantMsg.MIXLY_ke_JOYSTICK = '遙桿傳感器';\r\nZhHantMsg.MIXLY_ke_JOYSTICK_btn = '遥杆按钮';\r\n\r\nZhHantMsg.MIXLY_ke_SMOKE_DATA = '煙霧傳感器 数字';\r\nZhHantMsg.MIXLY_ke_SMOKE_ANALOG = '煙霧傳感器 模拟';\r\nZhHantMsg.MIXLY_ke_ALCOHOL = '酒精傳感器';\r\nZhHantMsg.MIXLY_ke_Voltage = '电压传感器';\r\nZhHantMsg.MIXLY_ke_Current = '电流传感器';\r\n\r\n\r\nZhHantMsg.MIXLY_ke_18B20 = '18B20溫度傳感器';\r\nZhHantMsg.MIXLY_ke_18B20_R = '获取温度';\r\nZhHantMsg.MIXLY_ke_DHT11 = '溫濕度傳感器';\r\nZhHantMsg.MIXLY_DHT11_H = '获取湿度';    /////////////\r\nZhHantMsg.MIXLY_DHT11_T = '获取温度';     ////////////\r\nZhHantMsg.MIXLY_ke_BMP180 = 'BMP180高度計傳感器';\r\nZhHantMsg.MIXLY_ke_BMP180_T = '温度';\r\nZhHantMsg.MIXLY_ke_BMP180_A = '大气压';\r\nZhHantMsg.MIXLY_ke_BMP180_H = '海拔高度';\r\n\r\nZhHantMsg.MIXLY_ke_BMP280 = 'BMP280高度計傳感器';\r\nZhHantMsg.MIXLY_ke_BMP280_T = '温度';\r\nZhHantMsg.MIXLY_ke_BMP280_A = '大气压';\r\nZhHantMsg.MIXLY_ke_BMP280_H = '海拔高度';\r\n\r\nZhHantMsg.MIXLY_ke_SR04 = 'SR04超聲波模塊';\r\nZhHantMsg.MIXLY_ke_3231 = '3231時鐘';\r\n\r\n//RTC-DS3231/DS1307\r\nZhHantMsg.MIXLY_ke_DS3231 = 'DS3231';\r\nZhHantMsg.MIXLY_ke_DS1307 = 'DS1307';\r\nZhHantMsg.MIXLY_ke_DS3231_GET_TIME = '獲取';\r\nZhHantMsg.MIXLY_ke_DS3231_SET_TIME = '設置時間';\r\nZhHantMsg.MIXLY_ke_DS3231_SET_TIME2 = '編譯的日期與時間';\r\nZhHantMsg.MIXLY_ke_YEAR = '年';\r\nZhHantMsg.MIXLY_ke_MONTH = '月';\r\nZhHantMsg.MIXLY_ke_DAY = '日';\r\nZhHantMsg.MIXLY_ke_HOUR = '時';\r\nZhHantMsg.MIXLY_ke_MINUTE = '分';\r\nZhHantMsg.MIXLY_ke_SECOND = '秒';\r\nZhHantMsg.MIXLY_ke_DAYOFWEEK = '星期';\r\n\r\nZhHantMsg.MIXLY_ke_ADXL345 = '加速度傳感器';\r\nZhHantMsg.MIXLY_ADXL345_X = 'X轴加速度'; ///\r\nZhHantMsg.MIXLY_ADXL345_Y = 'Y轴加速度'; ///\r\nZhHantMsg.MIXLY_ADXL345_Z = 'Z轴加速度'; ///\r\nZhHantMsg.MIXLY_ADXL345_XA = 'X轴角度';  ///\r\nZhHantMsg.MIXLY_ADXL345_YA = 'Y轴角度';  ///\r\nZhHantMsg.MLX90614_TYPE = '紅外測溫傳感器';\r\nZhHantMsg.MLX90614_TARGET_OBJECT_TEMP = '目標物體溫度';\r\nZhHantMsg.MLX90614_AMBIENT_TEMP = '周圍環境溫度';\r\nZhHantMsg.TCS34725_Get_RGB = 'TCS34725顏色感測器 獲取顏色';\r\nZhHantMsg.ke_Gesture_APDS = '手势传感器获取手势';\r\n\r\n\r\nZhHantMsg.MIXLY_DF_LCD = 'LCD 顯示幕';\r\nZhHantMsg.MIXLY_LCD_PRINT1 = '列印第1列(row)';\r\nZhHantMsg.MIXLY_LCD_PRINT2 = '列印第2列(row)';\r\nZhHantMsg.MIXLY_LCD_PRINT3 = '列印第3列(row)';\r\nZhHantMsg.MIXLY_LCD_PRINT4 = '列印第4列(row)';\r\nZhHantMsg.MIXLY_LCD_ROW = '列(row)在第';\r\nZhHantMsg.MIXLY_LCD_COLUMN = '行(column)在第';\r\nZhHantMsg.MIXLY_LCD_PRINT = '列列印';\r\nZhHantMsg.MIXLY_LCD_SETCOLOR = '設置顏色';\r\nZhHantMsg.MIXLY_LCD_STAT_CURSOR = '有游標';\r\nZhHantMsg.MIXLY_LCD_STAT_NOCURSOR = '無游標';\r\nZhHantMsg.MIXLY_LCD_STAT_BLINK = '閃爍';\r\nZhHantMsg.MIXLY_LCD_STAT_NOBLINK = '不閃爍';\r\nZhHantMsg.MIXLY_LCD_STAT_CLEAR = '清屏';\r\nZhHantMsg.MIXLY_LCD_NOBACKLIGHT = '關閉背光';\r\nZhHantMsg.MIXLY_LCD_BACKLIGHT = '打開背光';\r\nZhHantMsg.MIXLY_NUMBER = '數字';\r\nZhHantMsg.MIXLY_ke_MATRIX = '8*8點陣';\r\n\r\nZhHantMsg.MIXLY_LCD128_SETUP = '128X32 LCD 初始化';  ////////////////\r\nZhHantMsg.MIXLY_LCD128_CURSOR = '128X32 LCD 设置位置';\r\nZhHantMsg.MIXLY_DISPLAY_STRING = '128X32 LCD 显示字符';\r\nZhHantMsg.MIXLY_ke_LCD128_PIXLE = '128X32 LCD 画点坐标';\r\nZhHantMsg.MIXLY_ke_LCD128_D = '128X32 LCD 删除点坐标';\r\nZhHantMsg.MIXLY_LCD128_CLEAR = '128X32 LCD 清屏';\r\n\r\n\r\nZhHantMsg.MIXLY_ke_TM1637 = '4位8段數碼管';\r\nZhHantMsg.MIXLY_ke_TM1637_C = '位数';\r\nZhHantMsg.MIXLY_ke_TM1637_P = '在第几位开始显示';\r\nZhHantMsg.MIXLY_ke_TM1637_Fill = '是否填充0';\r\nZhHantMsg.MIXLY_ke_TM1637_light = '亮度0~7';\r\nZhHantMsg.MIXLY_ke_TM1637_xy = '显或隐';\r\nZhHantMsg.MIXLY_ke_TM1637_left = '左边';\r\nZhHantMsg.MIXLY_ke_TM1637_maohao = '冒号';\r\nZhHantMsg.MIXLY_ke_TM1637_right = '右边';\r\nZhHantMsg.MIXLY_ke_value = '数值';\r\n\r\n//4 Display\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY = '四位數碼管';\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY_DISPLAYSTRING = '顯示字符串';\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY_DISPLAYNUMBER = '顯示數字';\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY_NOMBER1 = '第';\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY_NOMBER2 = '個';\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY_DOT = '小數點';\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY_BRIGHTNESS = '亮度';\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY_BRIGHTNESS_RANGE = '(1~8)';\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY_TIME_HOUR = '時';\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY_TIME_MINUTE = '分';\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY_TIME_SECOND = '秒';\r\n//4 Display time\r\nZhHantMsg.MIXLY_ke_TIME_SEC_ON = '亮';\r\nZhHantMsg.MIXLY_ke_TIME_SEC_BLINK = '閃';\r\nZhHantMsg.MIXLY_ke_TIME_SEC_OFF = '滅';\r\n\r\nZhHantMsg.MIXLY_ke_IR_E = '紅外發射模塊';\r\nZhHantMsg.MIXLY_ke_IR_R = '紅外接收模塊';\r\nZhHantMsg.MIXLY_ke_W5100 = 'W5100以太網模塊';\r\nZhHantMsg.MIXLY_rc522_iic_init = 'RFID RC522_I2C 初始化';\r\nZhHantMsg.MIXLY_rc522_iic_read = 'RFID RC522_I2C 读取值';\r\nZhHantMsg.MIXLY_ke_BLUETOOTH = '藍牙';\r\nZhHantMsg.MIXLY_ke_read = '接收到信号';\r\n\r\nZhHantMsg.MIXLY_ke_Count = '灯号';\r\n\r\nZhHantMsg.MIXLY_ke_YEAR = '年';\r\nZhHantMsg.MIXLY_ke_MONTH = '月';\r\nZhHantMsg.MIXLY_ke_DAY = '日';\r\nZhHantMsg.MIXLY_ke_HOUR = '时';\r\nZhHantMsg.MIXLY_ke_MINUTE = '分';\r\nZhHantMsg.MIXLY_ke_SECOND = '秒';\r\nZhHantMsg.MIXLY_ke_WEEK = '周';\r\n\r\nZhHantMsg.MIXLY_ke_angle = '角度';\r\n\r\nZhHantMsg.kids_Ode_to_joy = \"圣诞歌\";\r\nZhHantMsg.kids_birthday = \"生日快乐\";\r\n\r\nZhHantMsg.kids_tone = \"音调\";\r\nZhHantMsg.kids_beat = \"节拍\";\r\nZhHantMsg.kids_play_tone = \"播放乐曲\";\r\nZhHantMsg.kids_notone = \"关闭蜂鸣器\";\r\n\r\nZhHantMsg.kids_ADkey = \"5位按键模块\";\r\n\r\nexport const ZhHantCatgories = {};","module.exports = Blockly;","module.exports = Mixly;","module.exports = profile;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as Blockly from 'blockly/core';\r\nimport { ZhHansMsg, ZhHansCatgories } from './language/zh-hans';\r\nimport { ZhHantMsg, ZhHantCatgories } from './language/zh-hant';\r\nimport { EnMsg, EnCatgories } from './language/en';\r\nimport * as generators from './generators/generator';\r\nimport * as blocks from './blocks/block';\r\n\r\n// 载入语言文件\r\nObject.assign(Blockly.Lang.ZhHans, ZhHansMsg);\r\nObject.assign(Blockly.Lang.ZhHant, ZhHantMsg);\r\nObject.assign(Blockly.Lang.En, EnMsg);\r\nObject.assign(Blockly.Lang.ZhHans.MSG, ZhHansCatgories);\r\nObject.assign(Blockly.Lang.ZhHant.MSG, ZhHantCatgories);\r\nObject.assign(Blockly.Lang.En.MSG, EnCatgories);\r\n\r\n// 载入图形化模块外观定义文件\r\nObject.assign(Blockly.Blocks, blocks);\r\n\r\n// 载入图形化模块代码生成定义文件\r\nObject.assign(Blockly.Arduino.forBlock, generators);"],"names":[],"sourceRoot":""}